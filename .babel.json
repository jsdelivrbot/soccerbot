{
  "{\"filename\":\"/app/bot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot.js",
      "filenameRelative": "/app/bot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bot.js",
      "sourceFileName": "bot.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bot"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n           ______     ______     ______   __  __     __     ______\n          /\\  == \\   /\\  __ \\   /\\__  _\\ /\\ \\/ /    /\\ \\   /\\__  _\\\n          \\ \\  __<   \\ \\ \\/\\ \\  \\/_/\\ \\/ \\ \\  _\"-.  \\ \\ \\  \\/_/\\ \\/\n           \\ \\_____\\  \\ \\_____\\    \\ \\_\\  \\ \\_\\ \\_\\  \\ \\_\\    \\ \\_\\\n            \\/_____/   \\/_____/     \\/_/   \\/_/\\/_/   \\/_/     \\/_/\n\n\nThis is a sample Slack bot built with Botkit.\n\nThis bot demonstrates many of the core features of Botkit:\n\n* Connect to Slack using the real time API\n* Receive messages based on \"spoken\" patterns\n* Reply to messages\n* Use the conversation system to ask questions\n* Use the built in storage system to store and retrieve information\n  for a user.\n\n# RUN THE BOT:\n\n  Create a new app via the Slack Developer site:\n\n    -> http://api.slack.com\n\n  Get a Botkit Studio token from Botkit.ai:\n\n    -> https://studio.botkit.ai/\n\n  Run your bot from the command line:\n\n    clientId=<MY SLACK TOKEN> clientSecret=<my client secret> PORT=<3000> studio_token=<MY BOTKIT STUDIO TOKEN> node bot.js\n\n# USE THE BOT:\n\n    Navigate to the built-in login page:\n\n    https://<myhost.com>/login\n\n    This will authenticate you with Slack.\n\n    If successful, your bot will come online and greet you.\n\n\n# EXTEND THE BOT:\n\n  Botkit has many features for building cool and useful bots!\n\n  Read all about it here:\n\n    -> http://howdy.ai/botkit\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\nvar env = require('node-env-file');\nenv(__dirname + '/.env');\n\nif (!process.env.clientId || !process.env.clientSecret || !process.env.PORT) {\n  usage_tip();\n  // process.exit(1);\n}\n\nvar Botkit = require('botkit');\nvar debug = require('debug')('botkit:main');\n\nvar bot_options = {\n  clientId: process.env.clientId,\n  clientSecret: process.env.clientSecret,\n  // debug: true,\n  scopes: ['bot']\n  // studio_token: process.env.studio_token,\n  // studio_command_uri: process.env.studio_command_uri\n};\n\n// Use a mongo database if specified, otherwise store in a JSON file local to the app.\n// Mongo is automatically configured when deploying to Heroku\nif (process.env.MONGO_URI) {\n  var mongoStorage = require('botkit-storage-mongo')({ mongoUri: process.env.MONGO_URI });\n  bot_options.storage = mongoStorage;\n} else {\n  bot_options.json_file_store = __dirname + '/.data/db/'; // store user data in a simple JSON format\n}\n\n// Create the Botkit controller, which controls all instances of the bot.\nvar controller = Botkit.slackbot(bot_options);\n\ncontroller.startTicking();\n\n// Set up an Express-powered webserver to expose oauth and webhook endpoints\nvar webserver = require(__dirname + '/components/express_webserver.js')(controller);\n\nif (!process.env.clientId || !process.env.clientSecret) {\n\n  // Load in some helpers that make running Botkit on Glitch.com better\n  require(__dirname + '/components/plugin_glitch.js')(controller);\n\n  webserver.get('/', function (req, res) {\n    res.render('installation', {\n      // studio_enabled: controller.config.studio_token ? true : false,\n      domain: req.get('host'),\n      protocol: req.protocol,\n      glitch_domain: process.env.PROJECT_DOMAIN,\n      layout: 'layouts/default'\n    });\n  });\n\n  var where_its_at = 'https://' + process.env.PROJECT_DOMAIN + '.glitch.me/';\n  console.log('WARNING: This application is not fully configured to work with Slack. Please see instructions at ' + where_its_at);\n} else {\n\n  webserver.get('/', function (req, res) {\n    res.render('index', {\n      domain: req.get('host'),\n      protocol: req.protocol,\n      glitch_domain: process.env.PROJECT_DOMAIN,\n      layout: 'layouts/default'\n    });\n  });\n  // Set up a simple storage backend for keeping a record of customers\n  // who sign up for the app via the oauth\n  require(__dirname + '/components/user_registration.js')(controller);\n\n  // Send an onboarding message when a new team joins\n  require(__dirname + '/components/onboarding.js')(controller);\n\n  // Load in some helpers that make running Botkit on Glitch.com better\n  require(__dirname + '/components/plugin_glitch.js')(controller);\n\n  // enable advanced botkit studio metrics\n  // require('botkit-studio-metrics')(controller);\n\n  var normalizedPath = require(\"path\").join(__dirname, \"skills\");\n  require(\"fs\").readdirSync(normalizedPath).forEach(function (file) {\n    require(\"./skills/\" + file)(controller);\n  });\n\n  //   \n  //   Prob just for studio\n  //   \n  // This captures and evaluates any message sent to the bot as a DM\n  // or sent to the bot in the form \"@bot message\" and passes it to\n  // Botkit Studio to evaluate for trigger words and patterns.\n  // If a trigger is matched, the conversation will automatically fire!\n  // You can tie into the execution of the script using the functions\n  // controller.studio.before, controller.studio.after and controller.studio.validate\n  // if (process.env.studio_token) {\n  // controller.on('direct_message,direct_mention,mention', function(bot, message) {\n  //     if (message.channel === 'GAVAJML07' || message.user === 'UAU3TNC5R') {\n  //       // controller.studio.runTrigger(bot, message.text, message.user, message.channel, message).then(function(convo) {\n  //       controller.runTrigger(bot, message.text, message.user, message.channel, message).then(function(convo) {\n  //         // console.log(message.user, message.channel, message.text)  \n  //         if (!convo) {\n  //               // no trigger was matched\n  //               // If you want your bot to respond to every message,\n  //               // define a 'fallback' script in Botkit Studio\n  //               // and uncomment the line below.\n  //               // controller.studio.run(bot, 'fallback', message.user, message.channel);\n  //             controller.run(bot, 'fallback', message.user, message.channel);\n  //           } else {\n  //               // set variables here that are needed for EVERY script\n  //               // use controller.studio.before('script') to set variables specific to a script\n  //               convo.setVar('current_time', new Date());\n  //           }\n  //       }).catch(function(err) {\n  //           bot.reply(message, 'I experienced an error with a request to Botkit Studio: ' + err);\n  //           debug('Botkit Studio: ', err);\n  //       });\n  //     }\n  // });\n  // } else {\n  //     console.log('~~~~~~~~~~');\n  //     console.log('NOTE: Botkit Studio functionality has not been enabled');\n  //     console.log('To enable, pass in a studio_token parameter with a token from https://studio.botkit.ai/');\n  // }\n}\n\nfunction usage_tip() {\n  console.log('~~~~~~~~~~');\n  console.log('Botkit Starter Kit');\n  console.log('Execute your bot application like this:');\n  console.log('clientId=<MY SLACK CLIENT ID> clientSecret=<MY CLIENT SECRET> PORT=3000 studio_token=<MY BOTKIT STUDIO TOKEN> node bot.js');\n  console.log('Get Slack app credentials here: https://api.slack.com/apps');\n  console.log('Get a Botkit Studio token here: https://studio.botkit.ai/');\n  console.log('~~~~~~~~~~');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "env",
        "require",
        "__dirname",
        "process",
        "clientId",
        "clientSecret",
        "PORT",
        "usage_tip",
        "Botkit",
        "debug",
        "bot_options",
        "scopes",
        "MONGO_URI",
        "mongoStorage",
        "mongoUri",
        "storage",
        "json_file_store",
        "controller",
        "slackbot",
        "startTicking",
        "webserver",
        "get",
        "req",
        "res",
        "render",
        "domain",
        "protocol",
        "glitch_domain",
        "PROJECT_DOMAIN",
        "layout",
        "where_its_at",
        "console",
        "log",
        "normalizedPath",
        "join",
        "readdirSync",
        "forEach",
        "file"
      ],
      "mappings": "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",
      "file": "bot.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n           ______     ______     ______   __  __     __     ______\n          /\\  == \\   /\\  __ \\   /\\__  _\\ /\\ \\/ /    /\\ \\   /\\__  _\\\n          \\ \\  __<   \\ \\ \\/\\ \\  \\/_/\\ \\/ \\ \\  _\"-.  \\ \\ \\  \\/_/\\ \\/\n           \\ \\_____\\  \\ \\_____\\    \\ \\_\\  \\ \\_\\ \\_\\  \\ \\_\\    \\ \\_\\\n            \\/_____/   \\/_____/     \\/_/   \\/_/\\/_/   \\/_/     \\/_/\n\n\nThis is a sample Slack bot built with Botkit.\n\nThis bot demonstrates many of the core features of Botkit:\n\n* Connect to Slack using the real time API\n* Receive messages based on \"spoken\" patterns\n* Reply to messages\n* Use the conversation system to ask questions\n* Use the built in storage system to store and retrieve information\n  for a user.\n\n# RUN THE BOT:\n\n  Create a new app via the Slack Developer site:\n\n    -> http://api.slack.com\n\n  Get a Botkit Studio token from Botkit.ai:\n\n    -> https://studio.botkit.ai/\n\n  Run your bot from the command line:\n\n    clientId=<MY SLACK TOKEN> clientSecret=<my client secret> PORT=<3000> studio_token=<MY BOTKIT STUDIO TOKEN> node bot.js\n\n# USE THE BOT:\n\n    Navigate to the built-in login page:\n\n    https://<myhost.com>/login\n\n    This will authenticate you with Slack.\n\n    If successful, your bot will come online and greet you.\n\n\n# EXTEND THE BOT:\n\n  Botkit has many features for building cool and useful bots!\n\n  Read all about it here:\n\n    -> http://howdy.ai/botkit\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\nvar env = require('node-env-file');\nenv(__dirname + '/.env');\n\n\nif (!process.env.clientId || !process.env.clientSecret || !process.env.PORT) {\n  usage_tip();\n  // process.exit(1);\n}\n\nvar Botkit = require('botkit');\nvar debug = require('debug')('botkit:main');\n\nvar bot_options = {\n    clientId: process.env.clientId,\n    clientSecret: process.env.clientSecret,\n    // debug: true,\n    scopes: ['bot'],\n    // studio_token: process.env.studio_token,\n    // studio_command_uri: process.env.studio_command_uri\n};\n\n// Use a mongo database if specified, otherwise store in a JSON file local to the app.\n// Mongo is automatically configured when deploying to Heroku\nif (process.env.MONGO_URI) {\n    var mongoStorage = require('botkit-storage-mongo')({mongoUri: process.env.MONGO_URI});\n    bot_options.storage = mongoStorage;\n} else {\n    bot_options.json_file_store = __dirname + '/.data/db/'; // store user data in a simple JSON format\n}\n\n// Create the Botkit controller, which controls all instances of the bot.\nvar controller = Botkit.slackbot(bot_options);\n\ncontroller.startTicking();\n\n// Set up an Express-powered webserver to expose oauth and webhook endpoints\nvar webserver = require(__dirname + '/components/express_webserver.js')(controller);\n\nif (!process.env.clientId || !process.env.clientSecret) {\n\n  // Load in some helpers that make running Botkit on Glitch.com better\n  require(__dirname + '/components/plugin_glitch.js')(controller);\n\n  webserver.get('/', function(req, res){\n    res.render('installation', {\n      // studio_enabled: controller.config.studio_token ? true : false,\n      domain: req.get('host'),\n      protocol: req.protocol,\n      glitch_domain:  process.env.PROJECT_DOMAIN,\n      layout: 'layouts/default'\n    });\n  })\n\n  var where_its_at = 'https://' + process.env.PROJECT_DOMAIN + '.glitch.me/';\n  console.log('WARNING: This application is not fully configured to work with Slack. Please see instructions at ' + where_its_at);\n}else {\n\n  webserver.get('/', function(req, res){\n    res.render('index', {\n      domain: req.get('host'),\n      protocol: req.protocol,\n      glitch_domain:  process.env.PROJECT_DOMAIN,\n      layout: 'layouts/default'\n    });\n  })\n  // Set up a simple storage backend for keeping a record of customers\n  // who sign up for the app via the oauth\n  require(__dirname + '/components/user_registration.js')(controller);\n\n  // Send an onboarding message when a new team joins\n  require(__dirname + '/components/onboarding.js')(controller);\n\n  // Load in some helpers that make running Botkit on Glitch.com better\n  require(__dirname + '/components/plugin_glitch.js')(controller);\n\n  // enable advanced botkit studio metrics\n  // require('botkit-studio-metrics')(controller);\n\n  var normalizedPath = require(\"path\").join(__dirname, \"skills\");\n  require(\"fs\").readdirSync(normalizedPath).forEach(function(file) {\n    require(\"./skills/\" + file)(controller);\n  });\n\n//   \n//   Prob just for studio\n//   \n  // This captures and evaluates any message sent to the bot as a DM\n  // or sent to the bot in the form \"@bot message\" and passes it to\n  // Botkit Studio to evaluate for trigger words and patterns.\n  // If a trigger is matched, the conversation will automatically fire!\n  // You can tie into the execution of the script using the functions\n  // controller.studio.before, controller.studio.after and controller.studio.validate\n  // if (process.env.studio_token) {\n      // controller.on('direct_message,direct_mention,mention', function(bot, message) {\n      //     if (message.channel === 'GAVAJML07' || message.user === 'UAU3TNC5R') {\n      //       // controller.studio.runTrigger(bot, message.text, message.user, message.channel, message).then(function(convo) {\n      //       controller.runTrigger(bot, message.text, message.user, message.channel, message).then(function(convo) {\n      //         // console.log(message.user, message.channel, message.text)  \n      //         if (!convo) {\n      //               // no trigger was matched\n      //               // If you want your bot to respond to every message,\n      //               // define a 'fallback' script in Botkit Studio\n      //               // and uncomment the line below.\n      //               // controller.studio.run(bot, 'fallback', message.user, message.channel);\n      //             controller.run(bot, 'fallback', message.user, message.channel);\n      //           } else {\n      //               // set variables here that are needed for EVERY script\n      //               // use controller.studio.before('script') to set variables specific to a script\n      //               convo.setVar('current_time', new Date());\n      //           }\n      //       }).catch(function(err) {\n      //           bot.reply(message, 'I experienced an error with a request to Botkit Studio: ' + err);\n      //           debug('Botkit Studio: ', err);\n      //       });\n      //     }\n      // });\n  // } else {\n  //     console.log('~~~~~~~~~~');\n  //     console.log('NOTE: Botkit Studio functionality has not been enabled');\n  //     console.log('To enable, pass in a studio_token parameter with a token from https://studio.botkit.ai/');\n  // }\n}\n\n\n\n\n\nfunction usage_tip() {\n    console.log('~~~~~~~~~~');\n    console.log('Botkit Starter Kit');\n    console.log('Execute your bot application like this:');\n    console.log('clientId=<MY SLACK CLIENT ID> clientSecret=<MY CLIENT SECRET> PORT=3000 studio_token=<MY BOTKIT STUDIO TOKEN> node bot.js');\n    console.log('Get Slack app credentials here: https://api.slack.com/apps')\n    console.log('Get a Botkit Studio token here: https://studio.botkit.ai/')\n    console.log('~~~~~~~~~~');\n}\n"
      ]
    },
    "mtime": 1529165150054
  },
  "{\"filename\":\"/app/components/express_webserver.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/express_webserver.js",
      "filenameRelative": "/app/components/express_webserver.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "express_webserver.js",
      "sourceFileName": "express_webserver.js",
      "sourceRoot": "/app/components",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "express_webserver"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar cookieParser = require('cookie-parser');\nvar querystring = require('querystring');\nvar debug = require('debug')('botkit:webserver');\nvar http = require('http');\nvar hbs = require('express-hbs');\n\nmodule.exports = function (controller) {\n\n    var webserver = express();\n    webserver.use(cookieParser());\n    webserver.use(bodyParser.json());\n    webserver.use(bodyParser.urlencoded({ extended: true }));\n\n    // set up handlebars ready for tabs\n    webserver.engine('hbs', hbs.express4({ partialsDir: __dirname + '/../views/partials' }));\n    webserver.set('view engine', 'hbs');\n    webserver.set('views', __dirname + '/../views/');\n\n    // import express middlewares that are present in /components/express_middleware\n    var normalizedPath = require(\"path\").join(__dirname, \"express_middleware\");\n    require(\"fs\").readdirSync(normalizedPath).forEach(function (file) {\n        require(\"./express_middleware/\" + file)(webserver, controller);\n    });\n\n    webserver.use(express.static('public'));\n\n    var server = http.createServer(webserver);\n\n    server.listen(process.env.PORT || 3000, null, function () {\n\n        console.log('Express webserver configured and listening at http://localhost:' + process.env.PORT || 3000);\n    });\n\n    // import all the pre-defined routes that are present in /components/routes\n    var normalizedPath = require(\"path\").join(__dirname, \"routes\");\n    require(\"fs\").readdirSync(normalizedPath).forEach(function (file) {\n        require(\"./routes/\" + file)(webserver, controller);\n    });\n\n    controller.webserver = webserver;\n    controller.httpserver = server;\n\n    return webserver;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cHJlc3Nfd2Vic2VydmVyLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keVBhcnNlciIsImNvb2tpZVBhcnNlciIsInF1ZXJ5c3RyaW5nIiwiZGVidWciLCJodHRwIiwiaGJzIiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRyb2xsZXIiLCJ3ZWJzZXJ2ZXIiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZW5naW5lIiwiZXhwcmVzczQiLCJwYXJ0aWFsc0RpciIsIl9fZGlybmFtZSIsInNldCIsIm5vcm1hbGl6ZWRQYXRoIiwiam9pbiIsInJlYWRkaXJTeW5jIiwiZm9yRWFjaCIsImZpbGUiLCJzdGF0aWMiLCJzZXJ2ZXIiLCJjcmVhdGVTZXJ2ZXIiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImNvbnNvbGUiLCJsb2ciLCJodHRwc2VydmVyIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFVBQVVDLFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUMsYUFBYUQsUUFBUSxhQUFSLENBQWpCO0FBQ0EsSUFBSUUsZUFBZUYsUUFBUSxlQUFSLENBQW5CO0FBQ0EsSUFBSUcsY0FBY0gsUUFBUSxhQUFSLENBQWxCO0FBQ0EsSUFBSUksUUFBUUosUUFBUSxPQUFSLEVBQWlCLGtCQUFqQixDQUFaO0FBQ0EsSUFBSUssT0FBT0wsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJTSxNQUFNTixRQUFRLGFBQVIsQ0FBVjs7QUFFQU8sT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxVQUFULEVBQXFCOztBQUVsQyxRQUFJQyxZQUFZWCxTQUFoQjtBQUNBVyxjQUFVQyxHQUFWLENBQWNULGNBQWQ7QUFDQVEsY0FBVUMsR0FBVixDQUFjVixXQUFXVyxJQUFYLEVBQWQ7QUFDQUYsY0FBVUMsR0FBVixDQUFjVixXQUFXWSxVQUFYLENBQXNCLEVBQUVDLFVBQVUsSUFBWixFQUF0QixDQUFkOztBQUVBO0FBQ0FKLGNBQVVLLE1BQVYsQ0FBaUIsS0FBakIsRUFBd0JULElBQUlVLFFBQUosQ0FBYSxFQUFDQyxhQUFhQyxZQUFZLG9CQUExQixFQUFiLENBQXhCO0FBQ0FSLGNBQVVTLEdBQVYsQ0FBYyxhQUFkLEVBQTZCLEtBQTdCO0FBQ0FULGNBQVVTLEdBQVYsQ0FBYyxPQUFkLEVBQXVCRCxZQUFZLFlBQW5DOztBQUVBO0FBQ0EsUUFBSUUsaUJBQWlCcEIsUUFBUSxNQUFSLEVBQWdCcUIsSUFBaEIsQ0FBcUJILFNBQXJCLEVBQWdDLG9CQUFoQyxDQUFyQjtBQUNBbEIsWUFBUSxJQUFSLEVBQWNzQixXQUFkLENBQTBCRixjQUExQixFQUEwQ0csT0FBMUMsQ0FBa0QsVUFBU0MsSUFBVCxFQUFlO0FBQzdEeEIsZ0JBQVEsMEJBQTBCd0IsSUFBbEMsRUFBd0NkLFNBQXhDLEVBQW1ERCxVQUFuRDtBQUNILEtBRkQ7O0FBSUFDLGNBQVVDLEdBQVYsQ0FBY1osUUFBUTBCLE1BQVIsQ0FBZSxRQUFmLENBQWQ7O0FBRUEsUUFBSUMsU0FBU3JCLEtBQUtzQixZQUFMLENBQWtCakIsU0FBbEIsQ0FBYjs7QUFFQWdCLFdBQU9FLE1BQVAsQ0FBY0MsUUFBUUMsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWxDLEVBQXdDLElBQXhDLEVBQThDLFlBQVc7O0FBRXJEQyxnQkFBUUMsR0FBUixDQUFZLG9FQUFvRUosUUFBUUMsR0FBUixDQUFZQyxJQUFoRixJQUF3RixJQUFwRztBQUVILEtBSkQ7O0FBTUE7QUFDQSxRQUFJWCxpQkFBaUJwQixRQUFRLE1BQVIsRUFBZ0JxQixJQUFoQixDQUFxQkgsU0FBckIsRUFBZ0MsUUFBaEMsQ0FBckI7QUFDQWxCLFlBQVEsSUFBUixFQUFjc0IsV0FBZCxDQUEwQkYsY0FBMUIsRUFBMENHLE9BQTFDLENBQWtELFVBQVNDLElBQVQsRUFBZTtBQUMvRHhCLGdCQUFRLGNBQWN3QixJQUF0QixFQUE0QmQsU0FBNUIsRUFBdUNELFVBQXZDO0FBQ0QsS0FGRDs7QUFJQUEsZUFBV0MsU0FBWCxHQUF1QkEsU0FBdkI7QUFDQUQsZUFBV3lCLFVBQVgsR0FBd0JSLE1BQXhCOztBQUVBLFdBQU9oQixTQUFQO0FBRUgsQ0F2Q0QiLCJmaWxlIjoiZXhwcmVzc193ZWJzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL2FwcC9jb21wb25lbnRzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIHF1ZXJ5c3RyaW5nID0gcmVxdWlyZSgncXVlcnlzdHJpbmcnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvdGtpdDp3ZWJzZXJ2ZXInKTtcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xudmFyIGhicyA9IHJlcXVpcmUoJ2V4cHJlc3MtaGJzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29udHJvbGxlcikge1xuXG4gICAgdmFyIHdlYnNlcnZlciA9IGV4cHJlc3MoKTtcbiAgICB3ZWJzZXJ2ZXIudXNlKGNvb2tpZVBhcnNlcigpKTtcbiAgICB3ZWJzZXJ2ZXIudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbiAgICB3ZWJzZXJ2ZXIudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcblxuICAgIC8vIHNldCB1cCBoYW5kbGViYXJzIHJlYWR5IGZvciB0YWJzXG4gICAgd2Vic2VydmVyLmVuZ2luZSgnaGJzJywgaGJzLmV4cHJlc3M0KHtwYXJ0aWFsc0RpcjogX19kaXJuYW1lICsgJy8uLi92aWV3cy9wYXJ0aWFscyd9KSk7XG4gICAgd2Vic2VydmVyLnNldCgndmlldyBlbmdpbmUnLCAnaGJzJyk7XG4gICAgd2Vic2VydmVyLnNldCgndmlld3MnLCBfX2Rpcm5hbWUgKyAnLy4uL3ZpZXdzLycpO1xuXG4gICAgLy8gaW1wb3J0IGV4cHJlc3MgbWlkZGxld2FyZXMgdGhhdCBhcmUgcHJlc2VudCBpbiAvY29tcG9uZW50cy9leHByZXNzX21pZGRsZXdhcmVcbiAgICB2YXIgbm9ybWFsaXplZFBhdGggPSByZXF1aXJlKFwicGF0aFwiKS5qb2luKF9fZGlybmFtZSwgXCJleHByZXNzX21pZGRsZXdhcmVcIik7XG4gICAgcmVxdWlyZShcImZzXCIpLnJlYWRkaXJTeW5jKG5vcm1hbGl6ZWRQYXRoKS5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpIHtcbiAgICAgICAgcmVxdWlyZShcIi4vZXhwcmVzc19taWRkbGV3YXJlL1wiICsgZmlsZSkod2Vic2VydmVyLCBjb250cm9sbGVyKTtcbiAgICB9KTtcblxuICAgIHdlYnNlcnZlci51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxuICAgIHZhciBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcih3ZWJzZXJ2ZXIpO1xuXG4gICAgc2VydmVyLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDAsIG51bGwsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdFeHByZXNzIHdlYnNlcnZlciBjb25maWd1cmVkIGFuZCBsaXN0ZW5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDonICsgcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwKTtcblxuICAgIH0pO1xuXG4gICAgLy8gaW1wb3J0IGFsbCB0aGUgcHJlLWRlZmluZWQgcm91dGVzIHRoYXQgYXJlIHByZXNlbnQgaW4gL2NvbXBvbmVudHMvcm91dGVzXG4gICAgdmFyIG5vcm1hbGl6ZWRQYXRoID0gcmVxdWlyZShcInBhdGhcIikuam9pbihfX2Rpcm5hbWUsIFwicm91dGVzXCIpO1xuICAgIHJlcXVpcmUoXCJmc1wiKS5yZWFkZGlyU3luYyhub3JtYWxpemVkUGF0aCkuZm9yRWFjaChmdW5jdGlvbihmaWxlKSB7XG4gICAgICByZXF1aXJlKFwiLi9yb3V0ZXMvXCIgKyBmaWxlKSh3ZWJzZXJ2ZXIsIGNvbnRyb2xsZXIpO1xuICAgIH0pO1xuXG4gICAgY29udHJvbGxlci53ZWJzZXJ2ZXIgPSB3ZWJzZXJ2ZXI7XG4gICAgY29udHJvbGxlci5odHRwc2VydmVyID0gc2VydmVyO1xuXG4gICAgcmV0dXJuIHdlYnNlcnZlcjtcblxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "express_webserver.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cookieParser",
        "querystring",
        "debug",
        "http",
        "hbs",
        "module",
        "exports",
        "controller",
        "webserver",
        "use",
        "json",
        "urlencoded",
        "extended",
        "engine",
        "express4",
        "partialsDir",
        "__dirname",
        "set",
        "normalizedPath",
        "join",
        "readdirSync",
        "forEach",
        "file",
        "static",
        "server",
        "createServer",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log",
        "httpserver"
      ],
      "mappings": ";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;AACA,IAAIE,eAAeF,QAAQ,eAAR,CAAnB;AACA,IAAIG,cAAcH,QAAQ,aAAR,CAAlB;AACA,IAAII,QAAQJ,QAAQ,OAAR,EAAiB,kBAAjB,CAAZ;AACA,IAAIK,OAAOL,QAAQ,MAAR,CAAX;AACA,IAAIM,MAAMN,QAAQ,aAAR,CAAV;;AAEAO,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElC,QAAIC,YAAYX,SAAhB;AACAW,cAAUC,GAAV,CAAcT,cAAd;AACAQ,cAAUC,GAAV,CAAcV,WAAWW,IAAX,EAAd;AACAF,cAAUC,GAAV,CAAcV,WAAWY,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAd;;AAEA;AACAJ,cAAUK,MAAV,CAAiB,KAAjB,EAAwBT,IAAIU,QAAJ,CAAa,EAACC,aAAaC,YAAY,oBAA1B,EAAb,CAAxB;AACAR,cAAUS,GAAV,CAAc,aAAd,EAA6B,KAA7B;AACAT,cAAUS,GAAV,CAAc,OAAd,EAAuBD,YAAY,YAAnC;;AAEA;AACA,QAAIE,iBAAiBpB,QAAQ,MAAR,EAAgBqB,IAAhB,CAAqBH,SAArB,EAAgC,oBAAhC,CAArB;AACAlB,YAAQ,IAAR,EAAcsB,WAAd,CAA0BF,cAA1B,EAA0CG,OAA1C,CAAkD,UAASC,IAAT,EAAe;AAC7DxB,gBAAQ,0BAA0BwB,IAAlC,EAAwCd,SAAxC,EAAmDD,UAAnD;AACH,KAFD;;AAIAC,cAAUC,GAAV,CAAcZ,QAAQ0B,MAAR,CAAe,QAAf,CAAd;;AAEA,QAAIC,SAASrB,KAAKsB,YAAL,CAAkBjB,SAAlB,CAAb;;AAEAgB,WAAOE,MAAP,CAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,EAAwC,IAAxC,EAA8C,YAAW;;AAErDC,gBAAQC,GAAR,CAAY,oEAAoEJ,QAAQC,GAAR,CAAYC,IAAhF,IAAwF,IAApG;AAEH,KAJD;;AAMA;AACA,QAAIX,iBAAiBpB,QAAQ,MAAR,EAAgBqB,IAAhB,CAAqBH,SAArB,EAAgC,QAAhC,CAArB;AACAlB,YAAQ,IAAR,EAAcsB,WAAd,CAA0BF,cAA1B,EAA0CG,OAA1C,CAAkD,UAASC,IAAT,EAAe;AAC/DxB,gBAAQ,cAAcwB,IAAtB,EAA4Bd,SAA5B,EAAuCD,UAAvC;AACD,KAFD;;AAIAA,eAAWC,SAAX,GAAuBA,SAAvB;AACAD,eAAWyB,UAAX,GAAwBR,MAAxB;;AAEA,WAAOhB,SAAP;AAEH,CAvCD",
      "file": "express_webserver.js",
      "sourceRoot": "/app/components",
      "sourcesContent": [
        "var express = require('express');\nvar bodyParser = require('body-parser');\nvar cookieParser = require('cookie-parser');\nvar querystring = require('querystring');\nvar debug = require('debug')('botkit:webserver');\nvar http = require('http');\nvar hbs = require('express-hbs');\n\nmodule.exports = function(controller) {\n\n    var webserver = express();\n    webserver.use(cookieParser());\n    webserver.use(bodyParser.json());\n    webserver.use(bodyParser.urlencoded({ extended: true }));\n\n    // set up handlebars ready for tabs\n    webserver.engine('hbs', hbs.express4({partialsDir: __dirname + '/../views/partials'}));\n    webserver.set('view engine', 'hbs');\n    webserver.set('views', __dirname + '/../views/');\n\n    // import express middlewares that are present in /components/express_middleware\n    var normalizedPath = require(\"path\").join(__dirname, \"express_middleware\");\n    require(\"fs\").readdirSync(normalizedPath).forEach(function(file) {\n        require(\"./express_middleware/\" + file)(webserver, controller);\n    });\n\n    webserver.use(express.static('public'));\n\n    var server = http.createServer(webserver);\n\n    server.listen(process.env.PORT || 3000, null, function() {\n\n        console.log('Express webserver configured and listening at http://localhost:' + process.env.PORT || 3000);\n\n    });\n\n    // import all the pre-defined routes that are present in /components/routes\n    var normalizedPath = require(\"path\").join(__dirname, \"routes\");\n    require(\"fs\").readdirSync(normalizedPath).forEach(function(file) {\n      require(\"./routes/\" + file)(webserver, controller);\n    });\n\n    controller.webserver = webserver;\n    controller.httpserver = server;\n\n    return webserver;\n\n}\n"
      ]
    },
    "mtime": 1527267959118
  },
  "{\"filename\":\"/app/components/express_middleware/register_with_studio.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components/express_middleware\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/express_middleware/register_with_studio.js",
      "filenameRelative": "/app/components/express_middleware/register_with_studio.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "register_with_studio.js",
      "sourceFileName": "register_with_studio.js",
      "sourceRoot": "/app/components/express_middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components/express_middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "register_with_studio"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar request = require('request');\nvar debug = require('debug')('botkit:register_with_studio');\nmodule.exports = function (webserver, controller) {\n\n    var registered_this_session = false;\n\n    controller.registerDeployWithStudio = function (host) {\n        if (!registered_this_session && controller.config.studio_token) {\n\n            // information about this instance of Botkit\n            // send to Botkit Studio in order to display in the hosting tab\n            var instance = {\n                url: host,\n                version: controller.version(),\n                ts: new Date()\n            };\n\n            request({\n                method: 'post',\n                uri: (controller.config.studio_command_uri || 'https://studio.botkit.ai') + '/api/v1/bots/phonehome?access_token=' + controller.config.studio_token,\n                form: instance\n            }, function (err, res, body) {\n\n                registered_this_session = true;\n\n                if (err) {\n                    debug('Error registering instance with Botkit Studio', err);\n                } else {\n\n                    var json = null;\n                    try {\n                        json = JSON.parse(body);\n                    } catch (err) {\n                        debug('Error registering instance with Botkit Studio', err);\n                    }\n\n                    if (json) {\n                        if (json.error) {\n                            debug('Error registering instance with Botkit Studio', json.error);\n                        }\n                    }\n                }\n            });\n        }\n    };\n\n    if (webserver && controller.config.studio_token) {\n        webserver.use(function (req, res, next) {\n            controller.registerDeployWithStudio(req.get('host'));\n            next();\n        });\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyX3dpdGhfc3R1ZGlvLmpzIl0sIm5hbWVzIjpbInJlcXVlc3QiLCJyZXF1aXJlIiwiZGVidWciLCJtb2R1bGUiLCJleHBvcnRzIiwid2Vic2VydmVyIiwiY29udHJvbGxlciIsInJlZ2lzdGVyZWRfdGhpc19zZXNzaW9uIiwicmVnaXN0ZXJEZXBsb3lXaXRoU3R1ZGlvIiwiaG9zdCIsImNvbmZpZyIsInN0dWRpb190b2tlbiIsImluc3RhbmNlIiwidXJsIiwidmVyc2lvbiIsInRzIiwiRGF0ZSIsIm1ldGhvZCIsInVyaSIsInN0dWRpb19jb21tYW5kX3VyaSIsImZvcm0iLCJlcnIiLCJyZXMiLCJib2R5IiwianNvbiIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwidXNlIiwicmVxIiwibmV4dCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxVQUFVQyxRQUFRLFNBQVIsQ0FBZDtBQUNBLElBQUlDLFFBQVFELFFBQVEsT0FBUixFQUFpQiw2QkFBakIsQ0FBWjtBQUNBRSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFNBQVQsRUFBb0JDLFVBQXBCLEVBQWdDOztBQUU3QyxRQUFJQywwQkFBMEIsS0FBOUI7O0FBRUFELGVBQVdFLHdCQUFYLEdBQXNDLFVBQVNDLElBQVQsRUFBZTtBQUM3QyxZQUFJLENBQUNGLHVCQUFELElBQTRCRCxXQUFXSSxNQUFYLENBQWtCQyxZQUFsRCxFQUFnRTs7QUFFNUQ7QUFDQTtBQUNBLGdCQUFJQyxXQUFXO0FBQ1hDLHFCQUFLSixJQURNO0FBRVhLLHlCQUFTUixXQUFXUSxPQUFYLEVBRkU7QUFHWEMsb0JBQUksSUFBSUMsSUFBSjtBQUhPLGFBQWY7O0FBTUFoQixvQkFBUTtBQUNKaUIsd0JBQVEsTUFESjtBQUVKQyxxQkFBSyxDQUFDWixXQUFXSSxNQUFYLENBQWtCUyxrQkFBbEIsSUFBd0MsMEJBQXpDLElBQXVFLHNDQUF2RSxHQUFnSGIsV0FBV0ksTUFBWCxDQUFrQkMsWUFGbkk7QUFHSlMsc0JBQU1SO0FBSEYsYUFBUixFQUlFLFVBQVNTLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7O0FBRXZCaEIsMENBQTBCLElBQTFCOztBQUVBLG9CQUFJYyxHQUFKLEVBQVM7QUFDTG5CLDBCQUFNLCtDQUFOLEVBQXVEbUIsR0FBdkQ7QUFDSCxpQkFGRCxNQUVPOztBQUVILHdCQUFJRyxPQUFNLElBQVY7QUFDQSx3QkFBSTtBQUNBQSwrQkFBT0MsS0FBS0MsS0FBTCxDQUFXSCxJQUFYLENBQVA7QUFDSCxxQkFGRCxDQUVFLE9BQU1GLEdBQU4sRUFBVztBQUNUbkIsOEJBQU0sK0NBQU4sRUFBdURtQixHQUF2RDtBQUNIOztBQUVELHdCQUFJRyxJQUFKLEVBQVU7QUFDTiw0QkFBSUEsS0FBS0csS0FBVCxFQUFnQjtBQUNaekIsa0NBQU0sK0NBQU4sRUFBdURzQixLQUFLRyxLQUE1RDtBQUNIO0FBQ0o7QUFDSjtBQUVKLGFBMUJEO0FBNEJIO0FBQ1IsS0F4Q0Q7O0FBMkNBLFFBQUl0QixhQUFhQyxXQUFXSSxNQUFYLENBQWtCQyxZQUFuQyxFQUFpRDtBQUM3Q04sa0JBQVV1QixHQUFWLENBQWMsVUFBU0MsR0FBVCxFQUFjUCxHQUFkLEVBQW1CUSxJQUFuQixFQUF5QjtBQUNuQ3hCLHVCQUFXRSx3QkFBWCxDQUFvQ3FCLElBQUlFLEdBQUosQ0FBUSxNQUFSLENBQXBDO0FBQ0FEO0FBQ0gsU0FIRDtBQUtIO0FBRUosQ0F2REQiLCJmaWxlIjoicmVnaXN0ZXJfd2l0aF9zdHVkaW8uanMiLCJzb3VyY2VSb290IjoiL2FwcC9jb21wb25lbnRzL2V4cHJlc3NfbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbInZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdCcpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnYm90a2l0OnJlZ2lzdGVyX3dpdGhfc3R1ZGlvJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHdlYnNlcnZlciwgY29udHJvbGxlcikge1xuXG4gICAgdmFyIHJlZ2lzdGVyZWRfdGhpc19zZXNzaW9uID0gZmFsc2U7XG5cbiAgICBjb250cm9sbGVyLnJlZ2lzdGVyRGVwbG95V2l0aFN0dWRpbyA9IGZ1bmN0aW9uKGhvc3QpIHtcbiAgICAgICAgICAgIGlmICghcmVnaXN0ZXJlZF90aGlzX3Nlc3Npb24gJiYgY29udHJvbGxlci5jb25maWcuc3R1ZGlvX3Rva2VuKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBpbmZvcm1hdGlvbiBhYm91dCB0aGlzIGluc3RhbmNlIG9mIEJvdGtpdFxuICAgICAgICAgICAgICAgIC8vIHNlbmQgdG8gQm90a2l0IFN0dWRpbyBpbiBvcmRlciB0byBkaXNwbGF5IGluIHRoZSBob3N0aW5nIHRhYlxuICAgICAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBob3N0LFxuICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOiBjb250cm9sbGVyLnZlcnNpb24oKSxcbiAgICAgICAgICAgICAgICAgICAgdHM6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgICAgICAgICB1cmk6IChjb250cm9sbGVyLmNvbmZpZy5zdHVkaW9fY29tbWFuZF91cmkgfHwgJ2h0dHBzOi8vc3R1ZGlvLmJvdGtpdC5haScpICsgJy9hcGkvdjEvYm90cy9waG9uZWhvbWU/YWNjZXNzX3Rva2VuPScgKyBjb250cm9sbGVyLmNvbmZpZy5zdHVkaW9fdG9rZW4sXG4gICAgICAgICAgICAgICAgICAgIGZvcm06IGluc3RhbmNlLFxuICAgICAgICAgICAgICAgIH0sZnVuY3Rpb24oZXJyLCByZXMsIGJvZHkpIHtcblxuICAgICAgICAgICAgICAgICAgICByZWdpc3RlcmVkX3RoaXNfc2Vzc2lvbiA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoJ0Vycm9yIHJlZ2lzdGVyaW5nIGluc3RhbmNlIHdpdGggQm90a2l0IFN0dWRpbycsIGVycik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uID1udWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc29uID0gSlNPTi5wYXJzZShib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoJ0Vycm9yIHJlZ2lzdGVyaW5nIGluc3RhbmNlIHdpdGggQm90a2l0IFN0dWRpbycsIGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChqc29uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGpzb24uZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoJ0Vycm9yIHJlZ2lzdGVyaW5nIGluc3RhbmNlIHdpdGggQm90a2l0IFN0dWRpbycsIGpzb24uZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH1cbiAgICB9XG5cblxuICAgIGlmICh3ZWJzZXJ2ZXIgJiYgY29udHJvbGxlci5jb25maWcuc3R1ZGlvX3Rva2VuKSB7XG4gICAgICAgIHdlYnNlcnZlci51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIucmVnaXN0ZXJEZXBsb3lXaXRoU3R1ZGlvKHJlcS5nZXQoJ2hvc3QnKSk7XG4gICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "register_with_studio.js"
      ],
      "names": [
        "request",
        "require",
        "debug",
        "module",
        "exports",
        "webserver",
        "controller",
        "registered_this_session",
        "registerDeployWithStudio",
        "host",
        "config",
        "studio_token",
        "instance",
        "url",
        "version",
        "ts",
        "Date",
        "method",
        "uri",
        "studio_command_uri",
        "form",
        "err",
        "res",
        "body",
        "json",
        "JSON",
        "parse",
        "error",
        "use",
        "req",
        "next",
        "get"
      ],
      "mappings": ";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,QAAQD,QAAQ,OAAR,EAAiB,6BAAjB,CAAZ;AACAE,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,UAApB,EAAgC;;AAE7C,QAAIC,0BAA0B,KAA9B;;AAEAD,eAAWE,wBAAX,GAAsC,UAASC,IAAT,EAAe;AAC7C,YAAI,CAACF,uBAAD,IAA4BD,WAAWI,MAAX,CAAkBC,YAAlD,EAAgE;;AAE5D;AACA;AACA,gBAAIC,WAAW;AACXC,qBAAKJ,IADM;AAEXK,yBAASR,WAAWQ,OAAX,EAFE;AAGXC,oBAAI,IAAIC,IAAJ;AAHO,aAAf;;AAMAhB,oBAAQ;AACJiB,wBAAQ,MADJ;AAEJC,qBAAK,CAACZ,WAAWI,MAAX,CAAkBS,kBAAlB,IAAwC,0BAAzC,IAAuE,sCAAvE,GAAgHb,WAAWI,MAAX,CAAkBC,YAFnI;AAGJS,sBAAMR;AAHF,aAAR,EAIE,UAASS,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;;AAEvBhB,0CAA0B,IAA1B;;AAEA,oBAAIc,GAAJ,EAAS;AACLnB,0BAAM,+CAAN,EAAuDmB,GAAvD;AACH,iBAFD,MAEO;;AAEH,wBAAIG,OAAM,IAAV;AACA,wBAAI;AACAA,+BAAOC,KAAKC,KAAL,CAAWH,IAAX,CAAP;AACH,qBAFD,CAEE,OAAMF,GAAN,EAAW;AACTnB,8BAAM,+CAAN,EAAuDmB,GAAvD;AACH;;AAED,wBAAIG,IAAJ,EAAU;AACN,4BAAIA,KAAKG,KAAT,EAAgB;AACZzB,kCAAM,+CAAN,EAAuDsB,KAAKG,KAA5D;AACH;AACJ;AACJ;AAEJ,aA1BD;AA4BH;AACR,KAxCD;;AA2CA,QAAItB,aAAaC,WAAWI,MAAX,CAAkBC,YAAnC,EAAiD;AAC7CN,kBAAUuB,GAAV,CAAc,UAASC,GAAT,EAAcP,GAAd,EAAmBQ,IAAnB,EAAyB;AACnCxB,uBAAWE,wBAAX,CAAoCqB,IAAIE,GAAJ,CAAQ,MAAR,CAApC;AACAD;AACH,SAHD;AAKH;AAEJ,CAvDD",
      "file": "register_with_studio.js",
      "sourceRoot": "/app/components/express_middleware",
      "sourcesContent": [
        "var request = require('request');\nvar debug = require('debug')('botkit:register_with_studio');\nmodule.exports = function(webserver, controller) {\n\n    var registered_this_session = false;\n\n    controller.registerDeployWithStudio = function(host) {\n            if (!registered_this_session && controller.config.studio_token) {\n\n                // information about this instance of Botkit\n                // send to Botkit Studio in order to display in the hosting tab\n                var instance = {\n                    url: host,\n                    version: controller.version(),\n                    ts: new Date(),\n                }\n\n                request({\n                    method: 'post',\n                    uri: (controller.config.studio_command_uri || 'https://studio.botkit.ai') + '/api/v1/bots/phonehome?access_token=' + controller.config.studio_token,\n                    form: instance,\n                },function(err, res, body) {\n\n                    registered_this_session = true;\n\n                    if (err) {\n                        debug('Error registering instance with Botkit Studio', err);\n                    } else {\n\n                        var json =null;\n                        try {\n                            json = JSON.parse(body);\n                        } catch(err) {\n                            debug('Error registering instance with Botkit Studio', err);\n                        }\n\n                        if (json) {\n                            if (json.error) {\n                                debug('Error registering instance with Botkit Studio', json.error);\n                            }\n                        }\n                    }\n\n                });\n\n            }\n    }\n\n\n    if (webserver && controller.config.studio_token) {\n        webserver.use(function(req, res, next) {\n            controller.registerDeployWithStudio(req.get('host'));\n            next();\n        });\n\n    }\n\n}\n"
      ]
    },
    "mtime": 1527267964190
  },
  "{\"filename\":\"/app/components/routes/incoming_webhooks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/routes/incoming_webhooks.js",
      "filenameRelative": "/app/components/routes/incoming_webhooks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "incoming_webhooks.js",
      "sourceFileName": "incoming_webhooks.js",
      "sourceRoot": "/app/components/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "incoming_webhooks"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:incoming_webhooks');\n\nmodule.exports = function (webserver, controller) {\n\n    debug('Configured /slack/receive url');\n    webserver.post('/slack/receive', function (req, res) {\n\n        // NOTE: we should enforce the token check here\n\n        // respond to Slack that the webhook has been received.\n        res.status(200);\n\n        // Now, pass the webhook into be processed\n        controller.handleWebhookPayload(req, res);\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluY29taW5nX3dlYmhvb2tzLmpzIl0sIm5hbWVzIjpbImRlYnVnIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3ZWJzZXJ2ZXIiLCJjb250cm9sbGVyIiwicG9zdCIsInJlcSIsInJlcyIsInN0YXR1cyIsImhhbmRsZVdlYmhvb2tQYXlsb2FkIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVFDLFFBQVEsT0FBUixFQUFpQiwwQkFBakIsQ0FBWjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxTQUFULEVBQW9CQyxVQUFwQixFQUFnQzs7QUFFN0NMLFVBQU0sK0JBQU47QUFDQUksY0FBVUUsSUFBVixDQUFlLGdCQUFmLEVBQWlDLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjs7QUFFaEQ7O0FBRUE7QUFDQUEsWUFBSUMsTUFBSixDQUFXLEdBQVg7O0FBRUE7QUFDQUosbUJBQVdLLG9CQUFYLENBQWdDSCxHQUFoQyxFQUFxQ0MsR0FBckM7QUFFSCxLQVZEO0FBWUgsQ0FmRCIsImZpbGUiOiJpbmNvbWluZ193ZWJob29rcy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2NvbXBvbmVudHMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnYm90a2l0OmluY29taW5nX3dlYmhvb2tzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24od2Vic2VydmVyLCBjb250cm9sbGVyKSB7XG5cbiAgICBkZWJ1ZygnQ29uZmlndXJlZCAvc2xhY2svcmVjZWl2ZSB1cmwnKTtcbiAgICB3ZWJzZXJ2ZXIucG9zdCgnL3NsYWNrL3JlY2VpdmUnLCBmdW5jdGlvbihyZXEsIHJlcykge1xuXG4gICAgICAgIC8vIE5PVEU6IHdlIHNob3VsZCBlbmZvcmNlIHRoZSB0b2tlbiBjaGVjayBoZXJlXG5cbiAgICAgICAgLy8gcmVzcG9uZCB0byBTbGFjayB0aGF0IHRoZSB3ZWJob29rIGhhcyBiZWVuIHJlY2VpdmVkLlxuICAgICAgICByZXMuc3RhdHVzKDIwMCk7XG5cbiAgICAgICAgLy8gTm93LCBwYXNzIHRoZSB3ZWJob29rIGludG8gYmUgcHJvY2Vzc2VkXG4gICAgICAgIGNvbnRyb2xsZXIuaGFuZGxlV2ViaG9va1BheWxvYWQocmVxLCByZXMpO1xuXG4gICAgfSk7XG5cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "incoming_webhooks.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "webserver",
        "controller",
        "post",
        "req",
        "res",
        "status",
        "handleWebhookPayload"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,EAAiB,0BAAjB,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,UAApB,EAAgC;;AAE7CL,UAAM,+BAAN;AACAI,cAAUE,IAAV,CAAe,gBAAf,EAAiC,UAASC,GAAT,EAAcC,GAAd,EAAmB;;AAEhD;;AAEA;AACAA,YAAIC,MAAJ,CAAW,GAAX;;AAEA;AACAJ,mBAAWK,oBAAX,CAAgCH,GAAhC,EAAqCC,GAArC;AAEH,KAVD;AAYH,CAfD",
      "file": "incoming_webhooks.js",
      "sourceRoot": "/app/components/routes",
      "sourcesContent": [
        "var debug = require('debug')('botkit:incoming_webhooks');\n\nmodule.exports = function(webserver, controller) {\n\n    debug('Configured /slack/receive url');\n    webserver.post('/slack/receive', function(req, res) {\n\n        // NOTE: we should enforce the token check here\n\n        // respond to Slack that the webhook has been received.\n        res.status(200);\n\n        // Now, pass the webhook into be processed\n        controller.handleWebhookPayload(req, res);\n\n    });\n\n}\n"
      ]
    },
    "mtime": 1527267970865
  },
  "{\"filename\":\"/app/components/routes/oauth.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/routes/oauth.js",
      "filenameRelative": "/app/components/routes/oauth.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "oauth.js",
      "sourceFileName": "oauth.js",
      "sourceRoot": "/app/components/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "oauth"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:oauth');\n\nmodule.exports = function (webserver, controller) {\n\n    var handler = {\n        login: function login(req, res) {\n            res.redirect(controller.getAuthorizeURL());\n        },\n        oauth: function oauth(req, res) {\n            var code = req.query.code;\n            var state = req.query.state;\n\n            // we need to use the Slack API, so spawn a generic bot with no token\n            var slackapi = controller.spawn({});\n\n            var opts = {\n                client_id: controller.config.clientId,\n                client_secret: controller.config.clientSecret,\n                code: code\n            };\n\n            slackapi.api.oauth.access(opts, function (err, auth) {\n\n                if (err) {\n                    debug('Error confirming oauth', err);\n                    return res.redirect('/login_error.html');\n                }\n\n                // what scopes did we get approved for?\n                var scopes = auth.scope.split(/\\,/);\n\n                // use the token we got from the oauth\n                // to call auth.test to make sure the token is valid\n                // but also so that we reliably have the team_id field!\n                slackapi.api.auth.test({ token: auth.access_token }, function (err, identity) {\n\n                    if (err) {\n                        debug('Error fetching user identity', err);\n                        return res.redirect('/login_error.html');\n                    }\n\n                    // Now we've got all we need to connect to this user's team\n                    // spin up a bot instance, and start being useful!\n                    // We just need to make sure this information is stored somewhere\n                    // and handled with care!\n\n                    // In order to do this in the most flexible way, we fire\n                    // a botkit event here with the payload so it can be handled\n                    // by the developer without meddling with the actual oauth route.\n\n                    auth.identity = identity;\n                    controller.trigger('oauth:success', [auth]);\n\n                    res.cookie('team_id', auth.team_id);\n                    res.cookie('bot_user_id', auth.bot.bot_user_id);\n                    res.redirect('/login_success.html');\n                });\n            });\n        }\n\n        // Create a /login link\n        // This link will send user's off to Slack to authorize the app\n        // See: https://github.com/howdyai/botkit/blob/master/readme-slack.md#custom-auth-flows\n    };debug('Configured /login url');\n    webserver.get('/login', handler.login);\n\n    // Create a /oauth link\n    // This is the link that receives the postback from Slack's oauth system\n    // So in Slack's config, under oauth redirect urls,\n    // your value should be https://<my custom domain or IP>/oauth\n    debug('Configured /oauth url');\n    webserver.get('/oauth', handler.oauth);\n\n    return handler;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9hdXRoLmpzIl0sIm5hbWVzIjpbImRlYnVnIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3ZWJzZXJ2ZXIiLCJjb250cm9sbGVyIiwiaGFuZGxlciIsImxvZ2luIiwicmVxIiwicmVzIiwicmVkaXJlY3QiLCJnZXRBdXRob3JpemVVUkwiLCJvYXV0aCIsImNvZGUiLCJxdWVyeSIsInN0YXRlIiwic2xhY2thcGkiLCJzcGF3biIsIm9wdHMiLCJjbGllbnRfaWQiLCJjb25maWciLCJjbGllbnRJZCIsImNsaWVudF9zZWNyZXQiLCJjbGllbnRTZWNyZXQiLCJhcGkiLCJhY2Nlc3MiLCJlcnIiLCJhdXRoIiwic2NvcGVzIiwic2NvcGUiLCJzcGxpdCIsInRlc3QiLCJ0b2tlbiIsImFjY2Vzc190b2tlbiIsImlkZW50aXR5IiwidHJpZ2dlciIsImNvb2tpZSIsInRlYW1faWQiLCJib3QiLCJib3RfdXNlcl9pZCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRQyxRQUFRLE9BQVIsRUFBaUIsY0FBakIsQ0FBWjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxTQUFULEVBQW9CQyxVQUFwQixFQUFnQzs7QUFFN0MsUUFBSUMsVUFBVTtBQUNWQyxlQUFPLGVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUN0QkEsZ0JBQUlDLFFBQUosQ0FBYUwsV0FBV00sZUFBWCxFQUFiO0FBQ0gsU0FIUztBQUlWQyxlQUFPLGVBQVNKLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUN0QixnQkFBSUksT0FBT0wsSUFBSU0sS0FBSixDQUFVRCxJQUFyQjtBQUNBLGdCQUFJRSxRQUFRUCxJQUFJTSxLQUFKLENBQVVDLEtBQXRCOztBQUVBO0FBQ0EsZ0JBQUlDLFdBQVdYLFdBQVdZLEtBQVgsQ0FBaUIsRUFBakIsQ0FBZjs7QUFFQSxnQkFBSUMsT0FBTztBQUNQQywyQkFBV2QsV0FBV2UsTUFBWCxDQUFrQkMsUUFEdEI7QUFFUEMsK0JBQWVqQixXQUFXZSxNQUFYLENBQWtCRyxZQUYxQjtBQUdQVixzQkFBTUE7QUFIQyxhQUFYOztBQU1BRyxxQkFBU1EsR0FBVCxDQUFhWixLQUFiLENBQW1CYSxNQUFuQixDQUEwQlAsSUFBMUIsRUFBZ0MsVUFBU1EsR0FBVCxFQUFjQyxJQUFkLEVBQW9COztBQUVoRCxvQkFBSUQsR0FBSixFQUFTO0FBQ0wxQiwwQkFBTSx3QkFBTixFQUFnQzBCLEdBQWhDO0FBQ0EsMkJBQU9qQixJQUFJQyxRQUFKLENBQWEsbUJBQWIsQ0FBUDtBQUNIOztBQUVEO0FBQ0Esb0JBQUlrQixTQUFTRCxLQUFLRSxLQUFMLENBQVdDLEtBQVgsQ0FBaUIsSUFBakIsQ0FBYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQWQseUJBQVNRLEdBQVQsQ0FBYUcsSUFBYixDQUFrQkksSUFBbEIsQ0FBdUIsRUFBQ0MsT0FBT0wsS0FBS00sWUFBYixFQUF2QixFQUFtRCxVQUFTUCxHQUFULEVBQWNRLFFBQWQsRUFBd0I7O0FBRXZFLHdCQUFJUixHQUFKLEVBQVM7QUFDTDFCLDhCQUFNLDhCQUFOLEVBQXNDMEIsR0FBdEM7QUFDQSwrQkFBT2pCLElBQUlDLFFBQUosQ0FBYSxtQkFBYixDQUFQO0FBQ0g7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBaUIseUJBQUtPLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0E3QiwrQkFBVzhCLE9BQVgsQ0FBbUIsZUFBbkIsRUFBb0MsQ0FBQ1IsSUFBRCxDQUFwQzs7QUFFQWxCLHdCQUFJMkIsTUFBSixDQUFXLFNBQVgsRUFBc0JULEtBQUtVLE9BQTNCO0FBQ0E1Qix3QkFBSTJCLE1BQUosQ0FBVyxhQUFYLEVBQTBCVCxLQUFLVyxHQUFMLENBQVNDLFdBQW5DO0FBQ0E5Qix3QkFBSUMsUUFBSixDQUFhLHFCQUFiO0FBRUgsaUJBdkJEO0FBMEJILGFBdkNEO0FBd0NIOztBQUlMO0FBQ0E7QUFDQTtBQS9EYyxLQUFkLENBZ0VBVixNQUFNLHVCQUFOO0FBQ0FJLGNBQVVvQyxHQUFWLENBQWMsUUFBZCxFQUF3QmxDLFFBQVFDLEtBQWhDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FQLFVBQU0sdUJBQU47QUFDQUksY0FBVW9DLEdBQVYsQ0FBYyxRQUFkLEVBQXdCbEMsUUFBUU0sS0FBaEM7O0FBRUEsV0FBT04sT0FBUDtBQUNILENBN0VEIiwiZmlsZSI6Im9hdXRoLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvY29tcG9uZW50cy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdib3RraXQ6b2F1dGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih3ZWJzZXJ2ZXIsIGNvbnRyb2xsZXIpIHtcblxuICAgIHZhciBoYW5kbGVyID0ge1xuICAgICAgICBsb2dpbjogZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIHJlcy5yZWRpcmVjdChjb250cm9sbGVyLmdldEF1dGhvcml6ZVVSTCgpKTtcbiAgICAgICAgfSxcbiAgICAgICAgb2F1dGg6IGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgICAgICAgICB2YXIgY29kZSA9IHJlcS5xdWVyeS5jb2RlO1xuICAgICAgICAgICAgdmFyIHN0YXRlID0gcmVxLnF1ZXJ5LnN0YXRlO1xuXG4gICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIHVzZSB0aGUgU2xhY2sgQVBJLCBzbyBzcGF3biBhIGdlbmVyaWMgYm90IHdpdGggbm8gdG9rZW5cbiAgICAgICAgICAgIHZhciBzbGFja2FwaSA9IGNvbnRyb2xsZXIuc3Bhd24oe30pO1xuXG4gICAgICAgICAgICB2YXIgb3B0cyA9IHtcbiAgICAgICAgICAgICAgICBjbGllbnRfaWQ6IGNvbnRyb2xsZXIuY29uZmlnLmNsaWVudElkLFxuICAgICAgICAgICAgICAgIGNsaWVudF9zZWNyZXQ6IGNvbnRyb2xsZXIuY29uZmlnLmNsaWVudFNlY3JldCxcbiAgICAgICAgICAgICAgICBjb2RlOiBjb2RlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBzbGFja2FwaS5hcGkub2F1dGguYWNjZXNzKG9wdHMsIGZ1bmN0aW9uKGVyciwgYXV0aCkge1xuXG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICBkZWJ1ZygnRXJyb3IgY29uZmlybWluZyBvYXV0aCcsIGVycik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMucmVkaXJlY3QoJy9sb2dpbl9lcnJvci5odG1sJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gd2hhdCBzY29wZXMgZGlkIHdlIGdldCBhcHByb3ZlZCBmb3I/XG4gICAgICAgICAgICAgICAgdmFyIHNjb3BlcyA9IGF1dGguc2NvcGUuc3BsaXQoL1xcLC8pO1xuXG4gICAgICAgICAgICAgICAgLy8gdXNlIHRoZSB0b2tlbiB3ZSBnb3QgZnJvbSB0aGUgb2F1dGhcbiAgICAgICAgICAgICAgICAvLyB0byBjYWxsIGF1dGgudGVzdCB0byBtYWtlIHN1cmUgdGhlIHRva2VuIGlzIHZhbGlkXG4gICAgICAgICAgICAgICAgLy8gYnV0IGFsc28gc28gdGhhdCB3ZSByZWxpYWJseSBoYXZlIHRoZSB0ZWFtX2lkIGZpZWxkIVxuICAgICAgICAgICAgICAgIHNsYWNrYXBpLmFwaS5hdXRoLnRlc3Qoe3Rva2VuOiBhdXRoLmFjY2Vzc190b2tlbn0sIGZ1bmN0aW9uKGVyciwgaWRlbnRpdHkpIHtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWJ1ZygnRXJyb3IgZmV0Y2hpbmcgdXNlciBpZGVudGl0eScsIGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KCcvbG9naW5fZXJyb3IuaHRtbCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gTm93IHdlJ3ZlIGdvdCBhbGwgd2UgbmVlZCB0byBjb25uZWN0IHRvIHRoaXMgdXNlcidzIHRlYW1cbiAgICAgICAgICAgICAgICAgICAgLy8gc3BpbiB1cCBhIGJvdCBpbnN0YW5jZSwgYW5kIHN0YXJ0IGJlaW5nIHVzZWZ1bCFcbiAgICAgICAgICAgICAgICAgICAgLy8gV2UganVzdCBuZWVkIHRvIG1ha2Ugc3VyZSB0aGlzIGluZm9ybWF0aW9uIGlzIHN0b3JlZCBzb21ld2hlcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIGhhbmRsZWQgd2l0aCBjYXJlIVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIEluIG9yZGVyIHRvIGRvIHRoaXMgaW4gdGhlIG1vc3QgZmxleGlibGUgd2F5LCB3ZSBmaXJlXG4gICAgICAgICAgICAgICAgICAgIC8vIGEgYm90a2l0IGV2ZW50IGhlcmUgd2l0aCB0aGUgcGF5bG9hZCBzbyBpdCBjYW4gYmUgaGFuZGxlZFxuICAgICAgICAgICAgICAgICAgICAvLyBieSB0aGUgZGV2ZWxvcGVyIHdpdGhvdXQgbWVkZGxpbmcgd2l0aCB0aGUgYWN0dWFsIG9hdXRoIHJvdXRlLlxuXG4gICAgICAgICAgICAgICAgICAgIGF1dGguaWRlbnRpdHkgPSBpZGVudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci50cmlnZ2VyKCdvYXV0aDpzdWNjZXNzJywgW2F1dGhdKTtcblxuICAgICAgICAgICAgICAgICAgICByZXMuY29va2llKCd0ZWFtX2lkJywgYXV0aC50ZWFtX2lkKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzLmNvb2tpZSgnYm90X3VzZXJfaWQnLCBhdXRoLmJvdC5ib3RfdXNlcl9pZCk7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5yZWRpcmVjdCgnL2xvZ2luX3N1Y2Nlc3MuaHRtbCcpO1xuXG4gICAgICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC8vIENyZWF0ZSBhIC9sb2dpbiBsaW5rXG4gICAgLy8gVGhpcyBsaW5rIHdpbGwgc2VuZCB1c2VyJ3Mgb2ZmIHRvIFNsYWNrIHRvIGF1dGhvcml6ZSB0aGUgYXBwXG4gICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaG93ZHlhaS9ib3RraXQvYmxvYi9tYXN0ZXIvcmVhZG1lLXNsYWNrLm1kI2N1c3RvbS1hdXRoLWZsb3dzXG4gICAgZGVidWcoJ0NvbmZpZ3VyZWQgL2xvZ2luIHVybCcpO1xuICAgIHdlYnNlcnZlci5nZXQoJy9sb2dpbicsIGhhbmRsZXIubG9naW4pO1xuXG4gICAgLy8gQ3JlYXRlIGEgL29hdXRoIGxpbmtcbiAgICAvLyBUaGlzIGlzIHRoZSBsaW5rIHRoYXQgcmVjZWl2ZXMgdGhlIHBvc3RiYWNrIGZyb20gU2xhY2sncyBvYXV0aCBzeXN0ZW1cbiAgICAvLyBTbyBpbiBTbGFjaydzIGNvbmZpZywgdW5kZXIgb2F1dGggcmVkaXJlY3QgdXJscyxcbiAgICAvLyB5b3VyIHZhbHVlIHNob3VsZCBiZSBodHRwczovLzxteSBjdXN0b20gZG9tYWluIG9yIElQPi9vYXV0aFxuICAgIGRlYnVnKCdDb25maWd1cmVkIC9vYXV0aCB1cmwnKTtcbiAgICB3ZWJzZXJ2ZXIuZ2V0KCcvb2F1dGgnLCBoYW5kbGVyLm9hdXRoKTtcblxuICAgIHJldHVybiBoYW5kbGVyO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "oauth.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "webserver",
        "controller",
        "handler",
        "login",
        "req",
        "res",
        "redirect",
        "getAuthorizeURL",
        "oauth",
        "code",
        "query",
        "state",
        "slackapi",
        "spawn",
        "opts",
        "client_id",
        "config",
        "clientId",
        "client_secret",
        "clientSecret",
        "api",
        "access",
        "err",
        "auth",
        "scopes",
        "scope",
        "split",
        "test",
        "token",
        "access_token",
        "identity",
        "trigger",
        "cookie",
        "team_id",
        "bot",
        "bot_user_id",
        "get"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,EAAiB,cAAjB,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,UAApB,EAAgC;;AAE7C,QAAIC,UAAU;AACVC,eAAO,eAASC,GAAT,EAAcC,GAAd,EAAmB;AACtBA,gBAAIC,QAAJ,CAAaL,WAAWM,eAAX,EAAb;AACH,SAHS;AAIVC,eAAO,eAASJ,GAAT,EAAcC,GAAd,EAAmB;AACtB,gBAAII,OAAOL,IAAIM,KAAJ,CAAUD,IAArB;AACA,gBAAIE,QAAQP,IAAIM,KAAJ,CAAUC,KAAtB;;AAEA;AACA,gBAAIC,WAAWX,WAAWY,KAAX,CAAiB,EAAjB,CAAf;;AAEA,gBAAIC,OAAO;AACPC,2BAAWd,WAAWe,MAAX,CAAkBC,QADtB;AAEPC,+BAAejB,WAAWe,MAAX,CAAkBG,YAF1B;AAGPV,sBAAMA;AAHC,aAAX;;AAMAG,qBAASQ,GAAT,CAAaZ,KAAb,CAAmBa,MAAnB,CAA0BP,IAA1B,EAAgC,UAASQ,GAAT,EAAcC,IAAd,EAAoB;;AAEhD,oBAAID,GAAJ,EAAS;AACL1B,0BAAM,wBAAN,EAAgC0B,GAAhC;AACA,2BAAOjB,IAAIC,QAAJ,CAAa,mBAAb,CAAP;AACH;;AAED;AACA,oBAAIkB,SAASD,KAAKE,KAAL,CAAWC,KAAX,CAAiB,IAAjB,CAAb;;AAEA;AACA;AACA;AACAd,yBAASQ,GAAT,CAAaG,IAAb,CAAkBI,IAAlB,CAAuB,EAACC,OAAOL,KAAKM,YAAb,EAAvB,EAAmD,UAASP,GAAT,EAAcQ,QAAd,EAAwB;;AAEvE,wBAAIR,GAAJ,EAAS;AACL1B,8BAAM,8BAAN,EAAsC0B,GAAtC;AACA,+BAAOjB,IAAIC,QAAJ,CAAa,mBAAb,CAAP;AACH;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAiB,yBAAKO,QAAL,GAAgBA,QAAhB;AACA7B,+BAAW8B,OAAX,CAAmB,eAAnB,EAAoC,CAACR,IAAD,CAApC;;AAEAlB,wBAAI2B,MAAJ,CAAW,SAAX,EAAsBT,KAAKU,OAA3B;AACA5B,wBAAI2B,MAAJ,CAAW,aAAX,EAA0BT,KAAKW,GAAL,CAASC,WAAnC;AACA9B,wBAAIC,QAAJ,CAAa,qBAAb;AAEH,iBAvBD;AA0BH,aAvCD;AAwCH;;AAIL;AACA;AACA;AA/Dc,KAAd,CAgEAV,MAAM,uBAAN;AACAI,cAAUoC,GAAV,CAAc,QAAd,EAAwBlC,QAAQC,KAAhC;;AAEA;AACA;AACA;AACA;AACAP,UAAM,uBAAN;AACAI,cAAUoC,GAAV,CAAc,QAAd,EAAwBlC,QAAQM,KAAhC;;AAEA,WAAON,OAAP;AACH,CA7ED",
      "file": "oauth.js",
      "sourceRoot": "/app/components/routes",
      "sourcesContent": [
        "var debug = require('debug')('botkit:oauth');\n\nmodule.exports = function(webserver, controller) {\n\n    var handler = {\n        login: function(req, res) {\n            res.redirect(controller.getAuthorizeURL());\n        },\n        oauth: function(req, res) {\n            var code = req.query.code;\n            var state = req.query.state;\n\n            // we need to use the Slack API, so spawn a generic bot with no token\n            var slackapi = controller.spawn({});\n\n            var opts = {\n                client_id: controller.config.clientId,\n                client_secret: controller.config.clientSecret,\n                code: code\n            };\n\n            slackapi.api.oauth.access(opts, function(err, auth) {\n\n                if (err) {\n                    debug('Error confirming oauth', err);\n                    return res.redirect('/login_error.html');\n                }\n\n                // what scopes did we get approved for?\n                var scopes = auth.scope.split(/\\,/);\n\n                // use the token we got from the oauth\n                // to call auth.test to make sure the token is valid\n                // but also so that we reliably have the team_id field!\n                slackapi.api.auth.test({token: auth.access_token}, function(err, identity) {\n\n                    if (err) {\n                        debug('Error fetching user identity', err);\n                        return res.redirect('/login_error.html');\n                    }\n\n                    // Now we've got all we need to connect to this user's team\n                    // spin up a bot instance, and start being useful!\n                    // We just need to make sure this information is stored somewhere\n                    // and handled with care!\n\n                    // In order to do this in the most flexible way, we fire\n                    // a botkit event here with the payload so it can be handled\n                    // by the developer without meddling with the actual oauth route.\n\n                    auth.identity = identity;\n                    controller.trigger('oauth:success', [auth]);\n\n                    res.cookie('team_id', auth.team_id);\n                    res.cookie('bot_user_id', auth.bot.bot_user_id);\n                    res.redirect('/login_success.html');\n\n                });\n\n\n            });\n        }\n    }\n\n\n    // Create a /login link\n    // This link will send user's off to Slack to authorize the app\n    // See: https://github.com/howdyai/botkit/blob/master/readme-slack.md#custom-auth-flows\n    debug('Configured /login url');\n    webserver.get('/login', handler.login);\n\n    // Create a /oauth link\n    // This is the link that receives the postback from Slack's oauth system\n    // So in Slack's config, under oauth redirect urls,\n    // your value should be https://<my custom domain or IP>/oauth\n    debug('Configured /oauth url');\n    webserver.get('/oauth', handler.oauth);\n\n    return handler;\n}\n"
      ]
    },
    "mtime": 1527267972641
  },
  "{\"filename\":\"/app/components/routes/testRoute.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/routes/testRoute.js",
      "filenameRelative": "/app/components/routes/testRoute.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "testRoute.js",
      "sourceFileName": "testRoute.js",
      "sourceRoot": "/app/components/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "testRoute"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:oauth');\n\nmodule.exports = function (webserver, controller) {\n\n    webserver.get('/test', function (req, res) {\n        res.status(200);\n        res.send('test');\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RSb3V0ZS5qcyJdLCJuYW1lcyI6WyJkZWJ1ZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwid2Vic2VydmVyIiwiY29udHJvbGxlciIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUUMsUUFBUSxPQUFSLEVBQWlCLGNBQWpCLENBQVo7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsU0FBVCxFQUFvQkMsVUFBcEIsRUFBZ0M7O0FBRTdDRCxjQUFVRSxHQUFWLENBQWMsT0FBZCxFQUF1QixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDdENBLFlBQUlDLE1BQUosQ0FBVyxHQUFYO0FBQ0FELFlBQUlFLElBQUosQ0FBUyxNQUFUO0FBQ0gsS0FIRDtBQUlILENBTkQiLCJmaWxlIjoidGVzdFJvdXRlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvY29tcG9uZW50cy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdib3RraXQ6b2F1dGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih3ZWJzZXJ2ZXIsIGNvbnRyb2xsZXIpIHtcblxuICAgIHdlYnNlcnZlci5nZXQoJy90ZXN0JywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDApO1xuICAgICAgICByZXMuc2VuZCgndGVzdCcpO1xuICAgIH0pO1xufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "testRoute.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "webserver",
        "controller",
        "get",
        "req",
        "res",
        "status",
        "send"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,EAAiB,cAAjB,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,UAApB,EAAgC;;AAE7CD,cAAUE,GAAV,CAAc,OAAd,EAAuB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACtCA,YAAIC,MAAJ,CAAW,GAAX;AACAD,YAAIE,IAAJ,CAAS,MAAT;AACH,KAHD;AAIH,CAND",
      "file": "testRoute.js",
      "sourceRoot": "/app/components/routes",
      "sourcesContent": [
        "var debug = require('debug')('botkit:oauth');\n\nmodule.exports = function(webserver, controller) {\n\n    webserver.get('/test', function(req, res) {\n        res.status(200);\n        res.send('test');\n    });\n}\n"
      ]
    },
    "mtime": 1527622947463
  },
  "{\"filename\":\"/app/components/user_registration.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/user_registration.js",
      "filenameRelative": "/app/components/user_registration.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user_registration.js",
      "sourceFileName": "user_registration.js",
      "sourceRoot": "/app/components",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user_registration"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:user_registration');\n\nmodule.exports = function (controller) {\n\n    /* Handle event caused by a user logging in with oauth */\n    controller.on('oauth:success', function (payload) {\n\n        debug('Got a successful login!', payload);\n        if (!payload.identity.team_id) {\n            debug('Error: received an oauth response without a team id', payload);\n        }\n        controller.storage.teams.get(payload.identity.team_id, function (err, team) {\n            if (err) {\n                debug('Error: could not load team from storage system:', payload.identity.team_id, err);\n            }\n\n            var new_team = false;\n            if (!team) {\n                team = {\n                    id: payload.identity.team_id,\n                    createdBy: payload.identity.user_id,\n                    url: payload.identity.url,\n                    name: payload.identity.team\n                };\n                var new_team = true;\n            }\n\n            team.bot = {\n                token: payload.bot.bot_access_token,\n                user_id: payload.bot.bot_user_id,\n                createdBy: payload.identity.user_id,\n                app_token: payload.access_token\n            };\n\n            var testbot = controller.spawn(team.bot);\n\n            testbot.api.auth.test({}, function (err, bot_auth) {\n                if (err) {\n                    debug('Error: could not authenticate bot user', err);\n                } else {\n                    team.bot.name = bot_auth.user;\n\n                    // add in info that is expected by Botkit\n                    testbot.identity = bot_auth;\n\n                    testbot.identity.id = bot_auth.user_id;\n                    testbot.identity.name = bot_auth.user;\n\n                    testbot.team_info = team;\n\n                    // Replace this with your own database!\n\n                    controller.storage.teams.save(team, function (err, id) {\n                        if (err) {\n                            debug('Error: could not save team record:', err);\n                        } else {\n                            if (new_team) {\n                                controller.trigger('create_team', [testbot, team]);\n                            } else {\n                                controller.trigger('update_team', [testbot, team]);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    });\n\n    controller.on('create_team', function (bot, team) {\n\n        debug('Team created:', team);\n\n        // Trigger an event that will establish an RTM connection for this bot\n        controller.trigger('rtm:start', [bot.config]);\n\n        // Trigger an event that will cause this team to receive onboarding messages\n        controller.trigger('onboard', [bot, team]);\n    });\n\n    controller.on('update_team', function (bot, team) {\n\n        debug('Team updated:', team);\n        // Trigger an event that will establish an RTM connection for this bot\n        controller.trigger('rtm:start', [bot]);\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfcmVnaXN0cmF0aW9uLmpzIl0sIm5hbWVzIjpbImRlYnVnIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyIiwib24iLCJwYXlsb2FkIiwiaWRlbnRpdHkiLCJ0ZWFtX2lkIiwic3RvcmFnZSIsInRlYW1zIiwiZ2V0IiwiZXJyIiwidGVhbSIsIm5ld190ZWFtIiwiaWQiLCJjcmVhdGVkQnkiLCJ1c2VyX2lkIiwidXJsIiwibmFtZSIsImJvdCIsInRva2VuIiwiYm90X2FjY2Vzc190b2tlbiIsImJvdF91c2VyX2lkIiwiYXBwX3Rva2VuIiwiYWNjZXNzX3Rva2VuIiwidGVzdGJvdCIsInNwYXduIiwiYXBpIiwiYXV0aCIsInRlc3QiLCJib3RfYXV0aCIsInVzZXIiLCJ0ZWFtX2luZm8iLCJzYXZlIiwidHJpZ2dlciIsImNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRQyxRQUFRLE9BQVIsRUFBaUIsMEJBQWpCLENBQVo7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsVUFBVCxFQUFxQjs7QUFFbEM7QUFDQUEsZUFBV0MsRUFBWCxDQUFjLGVBQWQsRUFBK0IsVUFBU0MsT0FBVCxFQUFrQjs7QUFFN0NOLGNBQU0seUJBQU4sRUFBaUNNLE9BQWpDO0FBQ0EsWUFBSSxDQUFDQSxRQUFRQyxRQUFSLENBQWlCQyxPQUF0QixFQUErQjtBQUMzQlIsa0JBQU0scURBQU4sRUFBNkRNLE9BQTdEO0FBQ0g7QUFDREYsbUJBQVdLLE9BQVgsQ0FBbUJDLEtBQW5CLENBQXlCQyxHQUF6QixDQUE2QkwsUUFBUUMsUUFBUixDQUFpQkMsT0FBOUMsRUFBdUQsVUFBU0ksR0FBVCxFQUFjQyxJQUFkLEVBQW9CO0FBQ3ZFLGdCQUFJRCxHQUFKLEVBQVM7QUFDTFosc0JBQU0saURBQU4sRUFBeURNLFFBQVFDLFFBQVIsQ0FBaUJDLE9BQTFFLEVBQW1GSSxHQUFuRjtBQUNIOztBQUVELGdCQUFJRSxXQUFXLEtBQWY7QUFDQSxnQkFBSSxDQUFDRCxJQUFMLEVBQVc7QUFDUEEsdUJBQU87QUFDSEUsd0JBQUlULFFBQVFDLFFBQVIsQ0FBaUJDLE9BRGxCO0FBRUhRLCtCQUFXVixRQUFRQyxRQUFSLENBQWlCVSxPQUZ6QjtBQUdIQyx5QkFBS1osUUFBUUMsUUFBUixDQUFpQlcsR0FIbkI7QUFJSEMsMEJBQU1iLFFBQVFDLFFBQVIsQ0FBaUJNO0FBSnBCLGlCQUFQO0FBTUEsb0JBQUlDLFdBQVUsSUFBZDtBQUNIOztBQUVERCxpQkFBS08sR0FBTCxHQUFXO0FBQ1BDLHVCQUFPZixRQUFRYyxHQUFSLENBQVlFLGdCQURaO0FBRVBMLHlCQUFTWCxRQUFRYyxHQUFSLENBQVlHLFdBRmQ7QUFHUFAsMkJBQVdWLFFBQVFDLFFBQVIsQ0FBaUJVLE9BSHJCO0FBSVBPLDJCQUFXbEIsUUFBUW1CO0FBSlosYUFBWDs7QUFPQSxnQkFBSUMsVUFBVXRCLFdBQVd1QixLQUFYLENBQWlCZCxLQUFLTyxHQUF0QixDQUFkOztBQUVBTSxvQkFBUUUsR0FBUixDQUFZQyxJQUFaLENBQWlCQyxJQUFqQixDQUFzQixFQUF0QixFQUEwQixVQUFTbEIsR0FBVCxFQUFjbUIsUUFBZCxFQUF3QjtBQUM5QyxvQkFBSW5CLEdBQUosRUFBUztBQUNMWiwwQkFBTSx3Q0FBTixFQUFnRFksR0FBaEQ7QUFDSCxpQkFGRCxNQUVPO0FBQ0hDLHlCQUFLTyxHQUFMLENBQVNELElBQVQsR0FBZ0JZLFNBQVNDLElBQXpCOztBQUVBO0FBQ0FOLDRCQUFRbkIsUUFBUixHQUFtQndCLFFBQW5COztBQUVBTCw0QkFBUW5CLFFBQVIsQ0FBaUJRLEVBQWpCLEdBQXNCZ0IsU0FBU2QsT0FBL0I7QUFDQVMsNEJBQVFuQixRQUFSLENBQWlCWSxJQUFqQixHQUF3QlksU0FBU0MsSUFBakM7O0FBRUFOLDRCQUFRTyxTQUFSLEdBQW9CcEIsSUFBcEI7O0FBRUE7O0FBRUFULCtCQUFXSyxPQUFYLENBQW1CQyxLQUFuQixDQUF5QndCLElBQXpCLENBQThCckIsSUFBOUIsRUFBb0MsVUFBU0QsR0FBVCxFQUFjRyxFQUFkLEVBQWtCO0FBQ2xELDRCQUFJSCxHQUFKLEVBQVM7QUFDTFosa0NBQU0sb0NBQU4sRUFBNENZLEdBQTVDO0FBQ0gseUJBRkQsTUFFTztBQUNILGdDQUFJRSxRQUFKLEVBQWM7QUFDVlYsMkNBQVcrQixPQUFYLENBQW1CLGFBQW5CLEVBQWtDLENBQUNULE9BQUQsRUFBVWIsSUFBVixDQUFsQztBQUNILDZCQUZELE1BRU87QUFDSFQsMkNBQVcrQixPQUFYLENBQW1CLGFBQW5CLEVBQWtDLENBQUNULE9BQUQsRUFBVWIsSUFBVixDQUFsQztBQUNIO0FBQ0o7QUFDSixxQkFWRDtBQVdIO0FBQ0osYUE1QkQ7QUE2QkgsU0F0REQ7QUF1REgsS0E3REQ7O0FBZ0VBVCxlQUFXQyxFQUFYLENBQWMsYUFBZCxFQUE2QixVQUFTZSxHQUFULEVBQWNQLElBQWQsRUFBb0I7O0FBRTdDYixjQUFNLGVBQU4sRUFBdUJhLElBQXZCOztBQUVBO0FBQ0FULG1CQUFXK0IsT0FBWCxDQUFtQixXQUFuQixFQUFnQyxDQUFDZixJQUFJZ0IsTUFBTCxDQUFoQzs7QUFFQTtBQUNBaEMsbUJBQVcrQixPQUFYLENBQW1CLFNBQW5CLEVBQThCLENBQUNmLEdBQUQsRUFBTVAsSUFBTixDQUE5QjtBQUVILEtBVkQ7O0FBYUFULGVBQVdDLEVBQVgsQ0FBYyxhQUFkLEVBQTZCLFVBQVNlLEdBQVQsRUFBY1AsSUFBZCxFQUFvQjs7QUFFN0NiLGNBQU0sZUFBTixFQUF1QmEsSUFBdkI7QUFDQTtBQUNBVCxtQkFBVytCLE9BQVgsQ0FBbUIsV0FBbkIsRUFBZ0MsQ0FBQ2YsR0FBRCxDQUFoQztBQUVILEtBTkQ7QUFRSCxDQXhGRCIsImZpbGUiOiJ1c2VyX3JlZ2lzdHJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2NvbXBvbmVudHMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdib3RraXQ6dXNlcl9yZWdpc3RyYXRpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb250cm9sbGVyKSB7XG5cbiAgICAvKiBIYW5kbGUgZXZlbnQgY2F1c2VkIGJ5IGEgdXNlciBsb2dnaW5nIGluIHdpdGggb2F1dGggKi9cbiAgICBjb250cm9sbGVyLm9uKCdvYXV0aDpzdWNjZXNzJywgZnVuY3Rpb24ocGF5bG9hZCkge1xuXG4gICAgICAgIGRlYnVnKCdHb3QgYSBzdWNjZXNzZnVsIGxvZ2luIScsIHBheWxvYWQpO1xuICAgICAgICBpZiAoIXBheWxvYWQuaWRlbnRpdHkudGVhbV9pZCkge1xuICAgICAgICAgICAgZGVidWcoJ0Vycm9yOiByZWNlaXZlZCBhbiBvYXV0aCByZXNwb25zZSB3aXRob3V0IGEgdGVhbSBpZCcsIHBheWxvYWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRyb2xsZXIuc3RvcmFnZS50ZWFtcy5nZXQocGF5bG9hZC5pZGVudGl0eS50ZWFtX2lkLCBmdW5jdGlvbihlcnIsIHRlYW0pIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZygnRXJyb3I6IGNvdWxkIG5vdCBsb2FkIHRlYW0gZnJvbSBzdG9yYWdlIHN5c3RlbTonLCBwYXlsb2FkLmlkZW50aXR5LnRlYW1faWQsIGVycik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBuZXdfdGVhbSA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKCF0ZWFtKSB7XG4gICAgICAgICAgICAgICAgdGVhbSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHBheWxvYWQuaWRlbnRpdHkudGVhbV9pZCxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlZEJ5OiBwYXlsb2FkLmlkZW50aXR5LnVzZXJfaWQsXG4gICAgICAgICAgICAgICAgICAgIHVybDogcGF5bG9hZC5pZGVudGl0eS51cmwsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHBheWxvYWQuaWRlbnRpdHkudGVhbSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHZhciBuZXdfdGVhbT0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGVhbS5ib3QgPSB7XG4gICAgICAgICAgICAgICAgdG9rZW46IHBheWxvYWQuYm90LmJvdF9hY2Nlc3NfdG9rZW4sXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogcGF5bG9hZC5ib3QuYm90X3VzZXJfaWQsXG4gICAgICAgICAgICAgICAgY3JlYXRlZEJ5OiBwYXlsb2FkLmlkZW50aXR5LnVzZXJfaWQsXG4gICAgICAgICAgICAgICAgYXBwX3Rva2VuOiBwYXlsb2FkLmFjY2Vzc190b2tlbixcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHZhciB0ZXN0Ym90ID0gY29udHJvbGxlci5zcGF3bih0ZWFtLmJvdCk7XG5cbiAgICAgICAgICAgIHRlc3Rib3QuYXBpLmF1dGgudGVzdCh7fSwgZnVuY3Rpb24oZXJyLCBib3RfYXV0aCkge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVidWcoJ0Vycm9yOiBjb3VsZCBub3QgYXV0aGVudGljYXRlIGJvdCB1c2VyJywgZXJyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0ZWFtLmJvdC5uYW1lID0gYm90X2F1dGgudXNlcjtcblxuICAgICAgICAgICAgICAgICAgICAvLyBhZGQgaW4gaW5mbyB0aGF0IGlzIGV4cGVjdGVkIGJ5IEJvdGtpdFxuICAgICAgICAgICAgICAgICAgICB0ZXN0Ym90LmlkZW50aXR5ID0gYm90X2F1dGg7XG5cbiAgICAgICAgICAgICAgICAgICAgdGVzdGJvdC5pZGVudGl0eS5pZCA9IGJvdF9hdXRoLnVzZXJfaWQ7XG4gICAgICAgICAgICAgICAgICAgIHRlc3Rib3QuaWRlbnRpdHkubmFtZSA9IGJvdF9hdXRoLnVzZXI7XG5cbiAgICAgICAgICAgICAgICAgICAgdGVzdGJvdC50ZWFtX2luZm8gPSB0ZWFtO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlcGxhY2UgdGhpcyB3aXRoIHlvdXIgb3duIGRhdGFiYXNlIVxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuc3RvcmFnZS50ZWFtcy5zYXZlKHRlYW0sIGZ1bmN0aW9uKGVyciwgaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWJ1ZygnRXJyb3I6IGNvdWxkIG5vdCBzYXZlIHRlYW0gcmVjb3JkOicsIGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdfdGVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLnRyaWdnZXIoJ2NyZWF0ZV90ZWFtJywgW3Rlc3Rib3QsIHRlYW1dKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLnRyaWdnZXIoJ3VwZGF0ZV90ZWFtJywgW3Rlc3Rib3QsIHRlYW1dKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuXG4gICAgY29udHJvbGxlci5vbignY3JlYXRlX3RlYW0nLCBmdW5jdGlvbihib3QsIHRlYW0pIHtcblxuICAgICAgICBkZWJ1ZygnVGVhbSBjcmVhdGVkOicsIHRlYW0pO1xuXG4gICAgICAgIC8vIFRyaWdnZXIgYW4gZXZlbnQgdGhhdCB3aWxsIGVzdGFibGlzaCBhbiBSVE0gY29ubmVjdGlvbiBmb3IgdGhpcyBib3RcbiAgICAgICAgY29udHJvbGxlci50cmlnZ2VyKCdydG06c3RhcnQnLCBbYm90LmNvbmZpZ10pO1xuXG4gICAgICAgIC8vIFRyaWdnZXIgYW4gZXZlbnQgdGhhdCB3aWxsIGNhdXNlIHRoaXMgdGVhbSB0byByZWNlaXZlIG9uYm9hcmRpbmcgbWVzc2FnZXNcbiAgICAgICAgY29udHJvbGxlci50cmlnZ2VyKCdvbmJvYXJkJywgW2JvdCwgdGVhbV0pO1xuXG4gICAgfSk7XG5cblxuICAgIGNvbnRyb2xsZXIub24oJ3VwZGF0ZV90ZWFtJywgZnVuY3Rpb24oYm90LCB0ZWFtKSB7XG5cbiAgICAgICAgZGVidWcoJ1RlYW0gdXBkYXRlZDonLCB0ZWFtKTtcbiAgICAgICAgLy8gVHJpZ2dlciBhbiBldmVudCB0aGF0IHdpbGwgZXN0YWJsaXNoIGFuIFJUTSBjb25uZWN0aW9uIGZvciB0aGlzIGJvdFxuICAgICAgICBjb250cm9sbGVyLnRyaWdnZXIoJ3J0bTpzdGFydCcsIFtib3RdKTtcblxuICAgIH0pO1xuXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user_registration.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "controller",
        "on",
        "payload",
        "identity",
        "team_id",
        "storage",
        "teams",
        "get",
        "err",
        "team",
        "new_team",
        "id",
        "createdBy",
        "user_id",
        "url",
        "name",
        "bot",
        "token",
        "bot_access_token",
        "bot_user_id",
        "app_token",
        "access_token",
        "testbot",
        "spawn",
        "api",
        "auth",
        "test",
        "bot_auth",
        "user",
        "team_info",
        "save",
        "trigger",
        "config"
      ],
      "mappings": "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",
      "file": "user_registration.js",
      "sourceRoot": "/app/components",
      "sourcesContent": [
        "var debug = require('debug')('botkit:user_registration');\n\nmodule.exports = function(controller) {\n\n    /* Handle event caused by a user logging in with oauth */\n    controller.on('oauth:success', function(payload) {\n\n        debug('Got a successful login!', payload);\n        if (!payload.identity.team_id) {\n            debug('Error: received an oauth response without a team id', payload);\n        }\n        controller.storage.teams.get(payload.identity.team_id, function(err, team) {\n            if (err) {\n                debug('Error: could not load team from storage system:', payload.identity.team_id, err);\n            }\n\n            var new_team = false;\n            if (!team) {\n                team = {\n                    id: payload.identity.team_id,\n                    createdBy: payload.identity.user_id,\n                    url: payload.identity.url,\n                    name: payload.identity.team,\n                };\n                var new_team= true;\n            }\n\n            team.bot = {\n                token: payload.bot.bot_access_token,\n                user_id: payload.bot.bot_user_id,\n                createdBy: payload.identity.user_id,\n                app_token: payload.access_token,\n            };\n\n            var testbot = controller.spawn(team.bot);\n\n            testbot.api.auth.test({}, function(err, bot_auth) {\n                if (err) {\n                    debug('Error: could not authenticate bot user', err);\n                } else {\n                    team.bot.name = bot_auth.user;\n\n                    // add in info that is expected by Botkit\n                    testbot.identity = bot_auth;\n\n                    testbot.identity.id = bot_auth.user_id;\n                    testbot.identity.name = bot_auth.user;\n\n                    testbot.team_info = team;\n\n                    // Replace this with your own database!\n\n                    controller.storage.teams.save(team, function(err, id) {\n                        if (err) {\n                            debug('Error: could not save team record:', err);\n                        } else {\n                            if (new_team) {\n                                controller.trigger('create_team', [testbot, team]);\n                            } else {\n                                controller.trigger('update_team', [testbot, team]);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    });\n\n\n    controller.on('create_team', function(bot, team) {\n\n        debug('Team created:', team);\n\n        // Trigger an event that will establish an RTM connection for this bot\n        controller.trigger('rtm:start', [bot.config]);\n\n        // Trigger an event that will cause this team to receive onboarding messages\n        controller.trigger('onboard', [bot, team]);\n\n    });\n\n\n    controller.on('update_team', function(bot, team) {\n\n        debug('Team updated:', team);\n        // Trigger an event that will establish an RTM connection for this bot\n        controller.trigger('rtm:start', [bot]);\n\n    });\n\n}\n"
      ]
    },
    "mtime": 1527622945167
  },
  "{\"filename\":\"/app/components/onboarding.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/onboarding.js",
      "filenameRelative": "/app/components/onboarding.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "onboarding.js",
      "sourceFileName": "onboarding.js",
      "sourceRoot": "/app/components",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "onboarding"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:onboarding');\n\nmodule.exports = function (controller) {\n\n    controller.on('onboard', function (bot) {\n\n        debug('Starting an onboarding experience!');\n\n        if (controller.config.studio_token) {\n            bot.api.im.open({ user: bot.config.createdBy }, function (err, direct_message) {\n                if (err) {\n                    debug('Error sending onboarding message:', err);\n                } else {\n                    controller.studio.run(bot, 'onboarding', bot.config.createdBy, direct_message.channel.id, direct_message).catch(function (err) {\n                        debug('Error: encountered an error loading onboarding script from Botkit Studio:', err);\n                    });\n                }\n            });\n        } else {\n            bot.startPrivateConversation({ user: bot.config.createdBy }, function (err, convo) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    convo.say('I am a bot that has just joined your team');\n                    convo.say('You must now /invite me to a channel so that I can be of use!');\n                }\n            });\n        }\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9uYm9hcmRpbmcuanMiXSwibmFtZXMiOlsiZGVidWciLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRyb2xsZXIiLCJvbiIsImJvdCIsImNvbmZpZyIsInN0dWRpb190b2tlbiIsImFwaSIsImltIiwib3BlbiIsInVzZXIiLCJjcmVhdGVkQnkiLCJlcnIiLCJkaXJlY3RfbWVzc2FnZSIsInN0dWRpbyIsInJ1biIsImNoYW5uZWwiLCJpZCIsImNhdGNoIiwic3RhcnRQcml2YXRlQ29udmVyc2F0aW9uIiwiY29udm8iLCJjb25zb2xlIiwibG9nIiwic2F5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVFDLFFBQVEsT0FBUixFQUFpQixtQkFBakIsQ0FBWjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxVQUFULEVBQXFCOztBQUVsQ0EsZUFBV0MsRUFBWCxDQUFjLFNBQWQsRUFBeUIsVUFBU0MsR0FBVCxFQUFjOztBQUVuQ04sY0FBTSxvQ0FBTjs7QUFFQSxZQUFJSSxXQUFXRyxNQUFYLENBQWtCQyxZQUF0QixFQUFvQztBQUNoQ0YsZ0JBQUlHLEdBQUosQ0FBUUMsRUFBUixDQUFXQyxJQUFYLENBQWdCLEVBQUNDLE1BQU1OLElBQUlDLE1BQUosQ0FBV00sU0FBbEIsRUFBaEIsRUFBOEMsVUFBU0MsR0FBVCxFQUFjQyxjQUFkLEVBQThCO0FBQ3hFLG9CQUFJRCxHQUFKLEVBQVM7QUFDTGQsMEJBQU0sbUNBQU4sRUFBMkNjLEdBQTNDO0FBQ0gsaUJBRkQsTUFFTztBQUNIViwrQkFBV1ksTUFBWCxDQUFrQkMsR0FBbEIsQ0FBc0JYLEdBQXRCLEVBQTJCLFlBQTNCLEVBQXlDQSxJQUFJQyxNQUFKLENBQVdNLFNBQXBELEVBQStERSxlQUFlRyxPQUFmLENBQXVCQyxFQUF0RixFQUEwRkosY0FBMUYsRUFBMEdLLEtBQTFHLENBQWdILFVBQVNOLEdBQVQsRUFBYztBQUMxSGQsOEJBQU0sMkVBQU4sRUFBbUZjLEdBQW5GO0FBQ0gscUJBRkQ7QUFHSDtBQUNKLGFBUkQ7QUFTSCxTQVZELE1BVU87QUFDSFIsZ0JBQUllLHdCQUFKLENBQTZCLEVBQUNULE1BQU1OLElBQUlDLE1BQUosQ0FBV00sU0FBbEIsRUFBN0IsRUFBMEQsVUFBU0MsR0FBVCxFQUFhUSxLQUFiLEVBQW9CO0FBQzVFLG9CQUFJUixHQUFKLEVBQVM7QUFDUFMsNEJBQVFDLEdBQVIsQ0FBWVYsR0FBWjtBQUNELGlCQUZELE1BRU87QUFDTFEsMEJBQU1HLEdBQU4sQ0FBVSwyQ0FBVjtBQUNBSCwwQkFBTUcsR0FBTixDQUFVLCtEQUFWO0FBQ0Q7QUFDRixhQVBEO0FBUUg7QUFDSixLQXhCRDtBQTBCSCxDQTVCRCIsImZpbGUiOiJvbmJvYXJkaW5nLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvY29tcG9uZW50cyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvdGtpdDpvbmJvYXJkaW5nJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29udHJvbGxlcikge1xuXG4gICAgY29udHJvbGxlci5vbignb25ib2FyZCcsIGZ1bmN0aW9uKGJvdCkge1xuXG4gICAgICAgIGRlYnVnKCdTdGFydGluZyBhbiBvbmJvYXJkaW5nIGV4cGVyaWVuY2UhJyk7XG5cbiAgICAgICAgaWYgKGNvbnRyb2xsZXIuY29uZmlnLnN0dWRpb190b2tlbikge1xuICAgICAgICAgICAgYm90LmFwaS5pbS5vcGVuKHt1c2VyOiBib3QuY29uZmlnLmNyZWF0ZWRCeX0sIGZ1bmN0aW9uKGVyciwgZGlyZWN0X21lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlYnVnKCdFcnJvciBzZW5kaW5nIG9uYm9hcmRpbmcgbWVzc2FnZTonLCBlcnIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuc3R1ZGlvLnJ1bihib3QsICdvbmJvYXJkaW5nJywgYm90LmNvbmZpZy5jcmVhdGVkQnksIGRpcmVjdF9tZXNzYWdlLmNoYW5uZWwuaWQsIGRpcmVjdF9tZXNzYWdlKS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlYnVnKCdFcnJvcjogZW5jb3VudGVyZWQgYW4gZXJyb3IgbG9hZGluZyBvbmJvYXJkaW5nIHNjcmlwdCBmcm9tIEJvdGtpdCBTdHVkaW86JywgZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBib3Quc3RhcnRQcml2YXRlQ29udmVyc2F0aW9uKHt1c2VyOiBib3QuY29uZmlnLmNyZWF0ZWRCeX0sZnVuY3Rpb24oZXJyLGNvbnZvKSB7XG4gICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnZvLnNheSgnSSBhbSBhIGJvdCB0aGF0IGhhcyBqdXN0IGpvaW5lZCB5b3VyIHRlYW0nKTtcbiAgICAgICAgICAgICAgICBjb252by5zYXkoJ1lvdSBtdXN0IG5vdyAvaW52aXRlIG1lIHRvIGEgY2hhbm5lbCBzbyB0aGF0IEkgY2FuIGJlIG9mIHVzZSEnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "onboarding.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "controller",
        "on",
        "bot",
        "config",
        "studio_token",
        "api",
        "im",
        "open",
        "user",
        "createdBy",
        "err",
        "direct_message",
        "studio",
        "run",
        "channel",
        "id",
        "catch",
        "startPrivateConversation",
        "convo",
        "console",
        "log",
        "say"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,EAAiB,mBAAjB,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElCA,eAAWC,EAAX,CAAc,SAAd,EAAyB,UAASC,GAAT,EAAc;;AAEnCN,cAAM,oCAAN;;AAEA,YAAII,WAAWG,MAAX,CAAkBC,YAAtB,EAAoC;AAChCF,gBAAIG,GAAJ,CAAQC,EAAR,CAAWC,IAAX,CAAgB,EAACC,MAAMN,IAAIC,MAAJ,CAAWM,SAAlB,EAAhB,EAA8C,UAASC,GAAT,EAAcC,cAAd,EAA8B;AACxE,oBAAID,GAAJ,EAAS;AACLd,0BAAM,mCAAN,EAA2Cc,GAA3C;AACH,iBAFD,MAEO;AACHV,+BAAWY,MAAX,CAAkBC,GAAlB,CAAsBX,GAAtB,EAA2B,YAA3B,EAAyCA,IAAIC,MAAJ,CAAWM,SAApD,EAA+DE,eAAeG,OAAf,CAAuBC,EAAtF,EAA0FJ,cAA1F,EAA0GK,KAA1G,CAAgH,UAASN,GAAT,EAAc;AAC1Hd,8BAAM,2EAAN,EAAmFc,GAAnF;AACH,qBAFD;AAGH;AACJ,aARD;AASH,SAVD,MAUO;AACHR,gBAAIe,wBAAJ,CAA6B,EAACT,MAAMN,IAAIC,MAAJ,CAAWM,SAAlB,EAA7B,EAA0D,UAASC,GAAT,EAAaQ,KAAb,EAAoB;AAC5E,oBAAIR,GAAJ,EAAS;AACPS,4BAAQC,GAAR,CAAYV,GAAZ;AACD,iBAFD,MAEO;AACLQ,0BAAMG,GAAN,CAAU,2CAAV;AACAH,0BAAMG,GAAN,CAAU,+DAAV;AACD;AACF,aAPD;AAQH;AACJ,KAxBD;AA0BH,CA5BD",
      "file": "onboarding.js",
      "sourceRoot": "/app/components",
      "sourcesContent": [
        "var debug = require('debug')('botkit:onboarding');\n\nmodule.exports = function(controller) {\n\n    controller.on('onboard', function(bot) {\n\n        debug('Starting an onboarding experience!');\n\n        if (controller.config.studio_token) {\n            bot.api.im.open({user: bot.config.createdBy}, function(err, direct_message) {\n                if (err) {\n                    debug('Error sending onboarding message:', err);\n                } else {\n                    controller.studio.run(bot, 'onboarding', bot.config.createdBy, direct_message.channel.id, direct_message).catch(function(err) {\n                        debug('Error: encountered an error loading onboarding script from Botkit Studio:', err);\n                    });\n                }\n            });\n        } else {\n            bot.startPrivateConversation({user: bot.config.createdBy},function(err,convo) {\n              if (err) {\n                console.log(err);\n              } else {\n                convo.say('I am a bot that has just joined your team');\n                convo.say('You must now /invite me to a channel so that I can be of use!');\n              }\n            });\n        }\n    });\n\n}\n"
      ]
    },
    "mtime": 1527622939839
  },
  "{\"filename\":\"/app/components/plugin_glitch.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/components\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/components/plugin_glitch.js",
      "filenameRelative": "/app/components/plugin_glitch.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "plugin_glitch.js",
      "sourceFileName": "plugin_glitch.js",
      "sourceRoot": "/app/components",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/components",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "plugin_glitch"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar request = require('request');\nmodule.exports = function (controller) {\n\n  function keepalive() {\n\n    request({\n      url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me'\n    }, function (err) {\n\n      setTimeout(function () {\n        keepalive();\n      }, 55000);\n    });\n  }\n\n  // if this is running on Glitch\n  if (process.env.PROJECT_DOMAIN) {\n\n    // Register with studio using the provided domain name\n    controller.registerDeployWithStudio(process.env.PROJECT_DOMAIN + '.glitch.me');\n\n    // make a web call to self every 55 seconds\n    // in order to avoid the process being put to sleep.\n    keepalive();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbl9nbGl0Y2guanMiXSwibmFtZXMiOlsicmVxdWVzdCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29udHJvbGxlciIsImtlZXBhbGl2ZSIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJQUk9KRUNUX0RPTUFJTiIsImVyciIsInNldFRpbWVvdXQiLCJyZWdpc3RlckRlcGxveVdpdGhTdHVkaW8iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsVUFBVUMsUUFBUSxTQUFSLENBQWQ7QUFDQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxVQUFULEVBQXFCOztBQUVwQyxXQUFTQyxTQUFULEdBQXFCOztBQUVuQkwsWUFBUTtBQUNOTSxXQUFLLFlBQVlDLFFBQVFDLEdBQVIsQ0FBWUMsY0FBeEIsR0FBeUM7QUFEeEMsS0FBUixFQUVHLFVBQVNDLEdBQVQsRUFBYzs7QUFFZkMsaUJBQVcsWUFBVztBQUNwQk47QUFDRCxPQUZELEVBRUcsS0FGSDtBQUlELEtBUkQ7QUFVRDs7QUFFRDtBQUNBLE1BQUlFLFFBQVFDLEdBQVIsQ0FBWUMsY0FBaEIsRUFBZ0M7O0FBRTlCO0FBQ0FMLGVBQVdRLHdCQUFYLENBQW9DTCxRQUFRQyxHQUFSLENBQVlDLGNBQVosR0FBNkIsWUFBakU7O0FBRUE7QUFDQTtBQUNBSjtBQUVEO0FBQ0YsQ0EzQkQiLCJmaWxlIjoicGx1Z2luX2dsaXRjaC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2NvbXBvbmVudHMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVxdWVzdCA9IHJlcXVpcmUoJ3JlcXVlc3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29udHJvbGxlcikge1xuXG4gIGZ1bmN0aW9uIGtlZXBhbGl2ZSgpIHtcblxuICAgIHJlcXVlc3Qoe1xuICAgICAgdXJsOiAnaHR0cDovLycgKyBwcm9jZXNzLmVudi5QUk9KRUNUX0RPTUFJTiArICcuZ2xpdGNoLm1lJyxcbiAgICB9LCBmdW5jdGlvbihlcnIpIHtcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAga2VlcGFsaXZlKCk7XG4gICAgICB9LCA1NTAwMCk7XG5cbiAgICB9KTtcblxuICB9XG5cbiAgLy8gaWYgdGhpcyBpcyBydW5uaW5nIG9uIEdsaXRjaFxuICBpZiAocHJvY2Vzcy5lbnYuUFJPSkVDVF9ET01BSU4pIHtcblxuICAgIC8vIFJlZ2lzdGVyIHdpdGggc3R1ZGlvIHVzaW5nIHRoZSBwcm92aWRlZCBkb21haW4gbmFtZVxuICAgIGNvbnRyb2xsZXIucmVnaXN0ZXJEZXBsb3lXaXRoU3R1ZGlvKHByb2Nlc3MuZW52LlBST0pFQ1RfRE9NQUlOICsgJy5nbGl0Y2gubWUnKTtcblxuICAgIC8vIG1ha2UgYSB3ZWIgY2FsbCB0byBzZWxmIGV2ZXJ5IDU1IHNlY29uZHNcbiAgICAvLyBpbiBvcmRlciB0byBhdm9pZCB0aGUgcHJvY2VzcyBiZWluZyBwdXQgdG8gc2xlZXAuXG4gICAga2VlcGFsaXZlKCk7XG5cbiAgfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "plugin_glitch.js"
      ],
      "names": [
        "request",
        "require",
        "module",
        "exports",
        "controller",
        "keepalive",
        "url",
        "process",
        "env",
        "PROJECT_DOMAIN",
        "err",
        "setTimeout",
        "registerDeployWithStudio"
      ],
      "mappings": ";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACAC,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAEpC,WAASC,SAAT,GAAqB;;AAEnBL,YAAQ;AACNM,WAAK,YAAYC,QAAQC,GAAR,CAAYC,cAAxB,GAAyC;AADxC,KAAR,EAEG,UAASC,GAAT,EAAc;;AAEfC,iBAAW,YAAW;AACpBN;AACD,OAFD,EAEG,KAFH;AAID,KARD;AAUD;;AAED;AACA,MAAIE,QAAQC,GAAR,CAAYC,cAAhB,EAAgC;;AAE9B;AACAL,eAAWQ,wBAAX,CAAoCL,QAAQC,GAAR,CAAYC,cAAZ,GAA6B,YAAjE;;AAEA;AACA;AACAJ;AAED;AACF,CA3BD",
      "file": "plugin_glitch.js",
      "sourceRoot": "/app/components",
      "sourcesContent": [
        "var request = require('request');\nmodule.exports = function(controller) {\n\n  function keepalive() {\n\n    request({\n      url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me',\n    }, function(err) {\n\n      setTimeout(function() {\n        keepalive();\n      }, 55000);\n\n    });\n\n  }\n\n  // if this is running on Glitch\n  if (process.env.PROJECT_DOMAIN) {\n\n    // Register with studio using the provided domain name\n    controller.registerDeployWithStudio(process.env.PROJECT_DOMAIN + '.glitch.me');\n\n    // make a web call to self every 55 seconds\n    // in order to avoid the process being put to sleep.\n    keepalive();\n\n  }\n}\n"
      ]
    },
    "mtime": 1527622939275
  },
  "{\"filename\":\"/app/skills/channel_join.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/channel_join.js",
      "filenameRelative": "/app/skills/channel_join.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "channel_join.js",
      "sourceFileName": "channel_join.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "channel_join"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar debug = require('debug')('botkit:channel_join');\n\nmodule.exports = function (controller) {\n\n    controller.on('bot_channel_join', function (bot, message) {\n\n        controller.studio.run(bot, 'channel_join', message.user, message.channel, message).catch(function (err) {\n            debug('Error: encountered an error loading onboarding script from Botkit Studio:', err);\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYW5uZWxfam9pbi5qcyJdLCJuYW1lcyI6WyJkZWJ1ZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29udHJvbGxlciIsIm9uIiwiYm90IiwibWVzc2FnZSIsInN0dWRpbyIsInJ1biIsInVzZXIiLCJjaGFubmVsIiwiY2F0Y2giLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUUMsUUFBUSxPQUFSLEVBQWlCLHFCQUFqQixDQUFaOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFVBQVQsRUFBcUI7O0FBRWxDQSxlQUFXQyxFQUFYLENBQWMsa0JBQWQsRUFBa0MsVUFBU0MsR0FBVCxFQUFjQyxPQUFkLEVBQXVCOztBQUVyREgsbUJBQVdJLE1BQVgsQ0FBa0JDLEdBQWxCLENBQXNCSCxHQUF0QixFQUEyQixjQUEzQixFQUEyQ0MsUUFBUUcsSUFBbkQsRUFBeURILFFBQVFJLE9BQWpFLEVBQTBFSixPQUExRSxFQUFtRkssS0FBbkYsQ0FBeUYsVUFBU0MsR0FBVCxFQUFjO0FBQ25HYixrQkFBTSwyRUFBTixFQUFtRmEsR0FBbkY7QUFDSCxTQUZEO0FBSUgsS0FORDtBQVFILENBVkQiLCJmaWxlIjoiY2hhbm5lbF9qb2luLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2tpbGxzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnYm90a2l0OmNoYW5uZWxfam9pbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbnRyb2xsZXIpIHtcblxuICAgIGNvbnRyb2xsZXIub24oJ2JvdF9jaGFubmVsX2pvaW4nLCBmdW5jdGlvbihib3QsIG1lc3NhZ2UpIHtcblxuICAgICAgICBjb250cm9sbGVyLnN0dWRpby5ydW4oYm90LCAnY2hhbm5lbF9qb2luJywgbWVzc2FnZS51c2VyLCBtZXNzYWdlLmNoYW5uZWwsIG1lc3NhZ2UpLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgZGVidWcoJ0Vycm9yOiBlbmNvdW50ZXJlZCBhbiBlcnJvciBsb2FkaW5nIG9uYm9hcmRpbmcgc2NyaXB0IGZyb20gQm90a2l0IFN0dWRpbzonLCBlcnIpO1xuICAgICAgICB9KTtcblxuICAgIH0pO1xuXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "channel_join.js"
      ],
      "names": [
        "debug",
        "require",
        "module",
        "exports",
        "controller",
        "on",
        "bot",
        "message",
        "studio",
        "run",
        "user",
        "channel",
        "catch",
        "err"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,EAAiB,qBAAjB,CAAZ;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElCA,eAAWC,EAAX,CAAc,kBAAd,EAAkC,UAASC,GAAT,EAAcC,OAAd,EAAuB;;AAErDH,mBAAWI,MAAX,CAAkBC,GAAlB,CAAsBH,GAAtB,EAA2B,cAA3B,EAA2CC,QAAQG,IAAnD,EAAyDH,QAAQI,OAAjE,EAA0EJ,OAA1E,EAAmFK,KAAnF,CAAyF,UAASC,GAAT,EAAc;AACnGb,kBAAM,2EAAN,EAAmFa,GAAnF;AACH,SAFD;AAIH,KAND;AAQH,CAVD",
      "file": "channel_join.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "var debug = require('debug')('botkit:channel_join');\n\nmodule.exports = function(controller) {\n\n    controller.on('bot_channel_join', function(bot, message) {\n\n        controller.studio.run(bot, 'channel_join', message.user, message.channel, message).catch(function(err) {\n            debug('Error: encountered an error loading onboarding script from Botkit Studio:', err);\n        });\n\n    });\n\n}\n"
      ]
    },
    "mtime": 1527880292297
  },
  "{\"filename\":\"/app/skills/hears.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "wordfilter",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "wordfilter"
              }
            ]
          },
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "./utils.js",
            "imported": [
              "stats",
              "formatUptime",
              "getTodaysMatches",
              "getAllStandings"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "stats",
                "local": "stats"
              },
              {
                "kind": "named",
                "imported": "formatUptime",
                "local": "formatUptime"
              },
              {
                "kind": "named",
                "imported": "getTodaysMatches",
                "local": "getTodaysMatches"
              },
              {
                "kind": "named",
                "imported": "getAllStandings",
                "local": "getAllStandings"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/hears.js",
      "filenameRelative": "/app/skills/hears.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "hears.js",
      "sourceFileName": "hears.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "hears"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _wordfilter = require('wordfilter');\n\nvar _wordfilter2 = _interopRequireDefault(_wordfilter);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nmodule.exports = function (controller) {\n  var _this = this;\n\n  controller.on('heard_trigger', function () {\n    _utils.stats.triggers++;\n  });\n\n  controller.on('conversationStarted', function () {\n    _utils.stats.convos++;\n  });\n\n  // \n  // Given Uptime\n  // \n  controller.hears(['^uptime', '^debug'], 'direct_message,direct_mention', function (bot, message) {\n    bot.createConversation(message, function (err, convo) {\n      if (!err) {\n        convo.setVar('uptime', (0, _utils.formatUptime)(process.uptime()));\n        convo.setVar('convos', _utils.stats.convos);\n        convo.setVar('triggers', _utils.stats.triggers);\n\n        convo.say('My main process has been online for {{vars.uptime}}. Since booting, I have heard {{vars.triggers}} triggers, and conducted {{vars.convos}} conversations.');\n        convo.activate();\n      }\n    });\n  });\n\n  // \n  // getAllStandings\n  // HEARS: * standings\n  // \n  controller.hears('(?:[(?:\\w+)(?:\\s+)])*(stand(?:ing|ings)?)', 'direct_message,direct_mention,ambient,mention', function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(bot, message) {\n      var standings;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!message.match[1]) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return (0, _utils.getAllStandings)();\n\n            case 3:\n              standings = _context.sent;\n\n              bot.reply(message, '```\\n' + standings + '\\n```');\n\n            case 5:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n\n  // \n  // getTodaysMatches\n  // HEARS: * matches\n  // \n  controller.hears('(?:[(?:\\w+)(?:\\s+)])*(match(?:es)?)', 'direct_message,direct_mention,ambient,mention', function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(bot, message) {\n      var standings;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!message.match[1]) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return (0, _utils.getTodaysMatches)();\n\n            case 3:\n              standings = _context2.sent;\n\n              bot.reply(message, '```\\n' + standings + '\\n```');\n\n            case 5:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, _this);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  // \n  // perdicts who will win the world cup\n  // HEARS: * win\n  // \n  controller.hears('((who|what team|which team) will win)[(?:\\w+)(?:\\s+)]*', 'direct_message,direct_mention,ambient,mention', function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(bot, message) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (message.match[1]) {\n                bot.reply(message, ':cbf: :cbf: :cbf: *BRASIL!!!* :cbf: :cbf: :cbf:');\n              }\n\n            case 1:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, _this);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYXJzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyIiwib24iLCJzdGF0cyIsInRyaWdnZXJzIiwiY29udm9zIiwiaGVhcnMiLCJib3QiLCJtZXNzYWdlIiwiY3JlYXRlQ29udmVyc2F0aW9uIiwiZXJyIiwiY29udm8iLCJzZXRWYXIiLCJwcm9jZXNzIiwidXB0aW1lIiwic2F5IiwiYWN0aXZhdGUiLCJtYXRjaCIsInN0YW5kaW5ncyIsInJlcGx5Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBT0FBLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsVUFBVCxFQUFxQjtBQUFBOztBQUVsQ0EsYUFBV0MsRUFBWCxDQUFjLGVBQWQsRUFBK0IsWUFBVztBQUN0Q0MsaUJBQU1DLFFBQU47QUFDSCxHQUZEOztBQUlBSCxhQUFXQyxFQUFYLENBQWMscUJBQWQsRUFBcUMsWUFBVztBQUM1Q0MsaUJBQU1FLE1BQU47QUFDSCxHQUZEOztBQUlBO0FBQ0E7QUFDQTtBQUNBSixhQUFXSyxLQUFYLENBQWlCLENBQUMsU0FBRCxFQUFXLFFBQVgsQ0FBakIsRUFBdUMsK0JBQXZDLEVBQXdFLFVBQVNDLEdBQVQsRUFBY0MsT0FBZCxFQUF1QjtBQUM3RkQsUUFBSUUsa0JBQUosQ0FBdUJELE9BQXZCLEVBQWdDLFVBQVNFLEdBQVQsRUFBY0MsS0FBZCxFQUFxQjtBQUNuRCxVQUFJLENBQUNELEdBQUwsRUFBVTtBQUNSQyxjQUFNQyxNQUFOLENBQWEsUUFBYixFQUF1Qix5QkFBYUMsUUFBUUMsTUFBUixFQUFiLENBQXZCO0FBQ0FILGNBQU1DLE1BQU4sQ0FBYSxRQUFiLEVBQXVCVCxhQUFNRSxNQUE3QjtBQUNBTSxjQUFNQyxNQUFOLENBQWEsVUFBYixFQUF5QlQsYUFBTUMsUUFBL0I7O0FBRUFPLGNBQU1JLEdBQU4sQ0FBVSwySkFBVjtBQUNBSixjQUFNSyxRQUFOO0FBQ0Q7QUFDRixLQVREO0FBV0QsR0FaRDs7QUFjQTtBQUNBO0FBQ0E7QUFDQTtBQUNBZixhQUFXSyxLQUFYLENBQWlCLDJDQUFqQixFQUNFLCtDQURGO0FBQUEsdUVBRUUsaUJBQU9DLEdBQVAsRUFBWUMsT0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDTUEsUUFBUVMsS0FBUixDQUFjLENBQWQsQ0FETjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLHFCQUU0Qiw2QkFGNUI7O0FBQUE7QUFFVUMsdUJBRlY7O0FBR0lYLGtCQUFJWSxLQUFKLENBQVVYLE9BQVYsWUFBOEJVLFNBQTlCOztBQUhKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBRkY7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQWpCLGFBQVdLLEtBQVgsQ0FBaUIscUNBQWpCLEVBQ0UsK0NBREY7QUFBQSx3RUFFRSxrQkFBT0MsR0FBUCxFQUFZQyxPQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNNQSxRQUFRUyxLQUFSLENBQWMsQ0FBZCxDQUROO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBRTRCLDhCQUY1Qjs7QUFBQTtBQUVVQyx1QkFGVjs7QUFHSVgsa0JBQUlZLEtBQUosQ0FBVVgsT0FBVixZQUE4QlUsU0FBOUI7O0FBSEo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FGRjs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBakIsYUFBV0ssS0FBWCxDQUFpQix3REFBakIsRUFDRSwrQ0FERjtBQUFBLHdFQUVFLGtCQUFPQyxHQUFQLEVBQVlDLE9BQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFLGtCQUFJQSxRQUFRUyxLQUFSLENBQWMsQ0FBZCxDQUFKLEVBQXNCO0FBQ3BCVixvQkFBSVksS0FBSixDQUFVWCxPQUFWO0FBQ0Q7O0FBSEg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FGRjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU9ILENBaEVEIiwiZmlsZSI6ImhlYXJzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2tpbGxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdvcmRmaWx0ZXIgZnJvbSAnd29yZGZpbHRlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgXG4gIHN0YXRzLFxuICBmb3JtYXRVcHRpbWUsXG4gIGdldFRvZGF5c01hdGNoZXMsXG4gIGdldEFsbFN0YW5kaW5nc1xufSBmcm9tICcuL3V0aWxzLmpzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb250cm9sbGVyKSB7XG5cbiAgICBjb250cm9sbGVyLm9uKCdoZWFyZF90cmlnZ2VyJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0YXRzLnRyaWdnZXJzKys7XG4gICAgfSk7XG5cbiAgICBjb250cm9sbGVyLm9uKCdjb252ZXJzYXRpb25TdGFydGVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0YXRzLmNvbnZvcysrO1xuICAgIH0pO1xuXG4gICAgLy8gXG4gICAgLy8gR2l2ZW4gVXB0aW1lXG4gICAgLy8gXG4gICAgY29udHJvbGxlci5oZWFycyhbJ151cHRpbWUnLCdeZGVidWcnXSwgJ2RpcmVjdF9tZXNzYWdlLGRpcmVjdF9tZW50aW9uJywgZnVuY3Rpb24oYm90LCBtZXNzYWdlKSB7XG4gICAgICBib3QuY3JlYXRlQ29udmVyc2F0aW9uKG1lc3NhZ2UsIGZ1bmN0aW9uKGVyciwgY29udm8pIHtcbiAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICBjb252by5zZXRWYXIoJ3VwdGltZScsIGZvcm1hdFVwdGltZShwcm9jZXNzLnVwdGltZSgpKSk7XG4gICAgICAgICAgY29udm8uc2V0VmFyKCdjb252b3MnLCBzdGF0cy5jb252b3MpO1xuICAgICAgICAgIGNvbnZvLnNldFZhcigndHJpZ2dlcnMnLCBzdGF0cy50cmlnZ2Vycyk7XG5cbiAgICAgICAgICBjb252by5zYXkoJ015IG1haW4gcHJvY2VzcyBoYXMgYmVlbiBvbmxpbmUgZm9yIHt7dmFycy51cHRpbWV9fS4gU2luY2UgYm9vdGluZywgSSBoYXZlIGhlYXJkIHt7dmFycy50cmlnZ2Vyc319IHRyaWdnZXJzLCBhbmQgY29uZHVjdGVkIHt7dmFycy5jb252b3N9fSBjb252ZXJzYXRpb25zLicpO1xuICAgICAgICAgIGNvbnZvLmFjdGl2YXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgfSk7XG4gICAgXG4gICAgLy8gXG4gICAgLy8gZ2V0QWxsU3RhbmRpbmdzXG4gICAgLy8gSEVBUlM6ICogc3RhbmRpbmdzXG4gICAgLy8gXG4gICAgY29udHJvbGxlci5oZWFycygnKD86Wyg/OlxcdyspKD86XFxzKyldKSooc3RhbmQoPzppbmd8aW5ncyk/KScsIFxuICAgICAgJ2RpcmVjdF9tZXNzYWdlLGRpcmVjdF9tZW50aW9uLGFtYmllbnQsbWVudGlvbicsXG4gICAgICBhc3luYyAoYm90LCBtZXNzYWdlKSA9PiB7IFxuICAgICAgICBpZiAobWVzc2FnZS5tYXRjaFsxXSkge1xuICAgICAgICAgIGNvbnN0IHN0YW5kaW5ncyA9IGF3YWl0IGdldEFsbFN0YW5kaW5ncygpO1xuICAgICAgICAgIGJvdC5yZXBseShtZXNzYWdlLCBgXFxgXFxgXFxgXFxuJHtzdGFuZGluZ3N9XFxuXFxgXFxgXFxgYCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFxuICAgIC8vIGdldFRvZGF5c01hdGNoZXNcbiAgICAvLyBIRUFSUzogKiBtYXRjaGVzXG4gICAgLy8gXG4gICAgY29udHJvbGxlci5oZWFycygnKD86Wyg/OlxcdyspKD86XFxzKyldKSoobWF0Y2goPzplcyk/KScsIFxuICAgICAgJ2RpcmVjdF9tZXNzYWdlLGRpcmVjdF9tZW50aW9uLGFtYmllbnQsbWVudGlvbicsXG4gICAgICBhc3luYyAoYm90LCBtZXNzYWdlKSA9PiB7IFxuICAgICAgICBpZiAobWVzc2FnZS5tYXRjaFsxXSkge1xuICAgICAgICAgIGNvbnN0IHN0YW5kaW5ncyA9IGF3YWl0IGdldFRvZGF5c01hdGNoZXMoKTtcbiAgICAgICAgICBib3QucmVwbHkobWVzc2FnZSwgYFxcYFxcYFxcYFxcbiR7c3RhbmRpbmdzfVxcblxcYFxcYFxcYGApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBcbiAgICAvLyBwZXJkaWN0cyB3aG8gd2lsbCB3aW4gdGhlIHdvcmxkIGN1cFxuICAgIC8vIEhFQVJTOiAqIHdpblxuICAgIC8vIFxuICAgIGNvbnRyb2xsZXIuaGVhcnMoJygod2hvfHdoYXQgdGVhbXx3aGljaCB0ZWFtKSB3aWxsIHdpbilbKD86XFx3KykoPzpcXHMrKV0qJywgXG4gICAgICAnZGlyZWN0X21lc3NhZ2UsZGlyZWN0X21lbnRpb24sYW1iaWVudCxtZW50aW9uJyxcbiAgICAgIGFzeW5jIChib3QsIG1lc3NhZ2UpID0+IHsgXG4gICAgICAgIGlmIChtZXNzYWdlLm1hdGNoWzFdKSB7XG4gICAgICAgICAgYm90LnJlcGx5KG1lc3NhZ2UsIGA6Y2JmOiA6Y2JmOiA6Y2JmOiAqQlJBU0lMISEhKiA6Y2JmOiA6Y2JmOiA6Y2JmOmApO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "hears.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "on",
        "stats",
        "triggers",
        "convos",
        "hears",
        "bot",
        "message",
        "createConversation",
        "err",
        "convo",
        "setVar",
        "process",
        "uptime",
        "say",
        "activate",
        "match",
        "standings",
        "reply"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;;;AAOAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;AAAA;;AAElCA,aAAWC,EAAX,CAAc,eAAd,EAA+B,YAAW;AACtCC,iBAAMC,QAAN;AACH,GAFD;;AAIAH,aAAWC,EAAX,CAAc,qBAAd,EAAqC,YAAW;AAC5CC,iBAAME,MAAN;AACH,GAFD;;AAIA;AACA;AACA;AACAJ,aAAWK,KAAX,CAAiB,CAAC,SAAD,EAAW,QAAX,CAAjB,EAAuC,+BAAvC,EAAwE,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC7FD,QAAIE,kBAAJ,CAAuBD,OAAvB,EAAgC,UAASE,GAAT,EAAcC,KAAd,EAAqB;AACnD,UAAI,CAACD,GAAL,EAAU;AACRC,cAAMC,MAAN,CAAa,QAAb,EAAuB,yBAAaC,QAAQC,MAAR,EAAb,CAAvB;AACAH,cAAMC,MAAN,CAAa,QAAb,EAAuBT,aAAME,MAA7B;AACAM,cAAMC,MAAN,CAAa,UAAb,EAAyBT,aAAMC,QAA/B;;AAEAO,cAAMI,GAAN,CAAU,2JAAV;AACAJ,cAAMK,QAAN;AACD;AACF,KATD;AAWD,GAZD;;AAcA;AACA;AACA;AACA;AACAf,aAAWK,KAAX,CAAiB,2CAAjB,EACE,+CADF;AAAA,uEAEE,iBAAOC,GAAP,EAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMA,QAAQS,KAAR,CAAc,CAAd,CADN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAE4B,6BAF5B;;AAAA;AAEUC,uBAFV;;AAGIX,kBAAIY,KAAJ,CAAUX,OAAV,YAA8BU,SAA9B;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;;AAAA;AAAA;AAAA;AAAA;;AASA;AACA;AACA;AACA;AACAjB,aAAWK,KAAX,CAAiB,qCAAjB,EACE,+CADF;AAAA,wEAEE,kBAAOC,GAAP,EAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMA,QAAQS,KAAR,CAAc,CAAd,CADN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAE4B,8BAF5B;;AAAA;AAEUC,uBAFV;;AAGIX,kBAAIY,KAAJ,CAAUX,OAAV,YAA8BU,SAA9B;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;;AAAA;AAAA;AAAA;AAAA;;AASA;AACA;AACA;AACA;AACAjB,aAAWK,KAAX,CAAiB,wDAAjB,EACE,+CADF;AAAA,wEAEE,kBAAOC,GAAP,EAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AACE,kBAAIA,QAAQS,KAAR,CAAc,CAAd,CAAJ,EAAsB;AACpBV,oBAAIY,KAAJ,CAAUX,OAAV;AACD;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;;AAAA;AAAA;AAAA;AAAA;AAOH,CAhED",
      "file": "hears.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "import wordfilter from 'wordfilter';\nimport _ from 'lodash';\nimport { \n  stats,\n  formatUptime,\n  getTodaysMatches,\n  getAllStandings\n} from './utils.js';\n\nmodule.exports = function(controller) {\n\n    controller.on('heard_trigger', function() {\n        stats.triggers++;\n    });\n\n    controller.on('conversationStarted', function() {\n        stats.convos++;\n    });\n\n    // \n    // Given Uptime\n    // \n    controller.hears(['^uptime','^debug'], 'direct_message,direct_mention', function(bot, message) {\n      bot.createConversation(message, function(err, convo) {\n        if (!err) {\n          convo.setVar('uptime', formatUptime(process.uptime()));\n          convo.setVar('convos', stats.convos);\n          convo.setVar('triggers', stats.triggers);\n\n          convo.say('My main process has been online for {{vars.uptime}}. Since booting, I have heard {{vars.triggers}} triggers, and conducted {{vars.convos}} conversations.');\n          convo.activate();\n        }\n      });\n\n    });\n    \n    // \n    // getAllStandings\n    // HEARS: * standings\n    // \n    controller.hears('(?:[(?:\\w+)(?:\\s+)])*(stand(?:ing|ings)?)', \n      'direct_message,direct_mention,ambient,mention',\n      async (bot, message) => { \n        if (message.match[1]) {\n          const standings = await getAllStandings();\n          bot.reply(message, `\\`\\`\\`\\n${standings}\\n\\`\\`\\``);\n        }\n    });\n\n    // \n    // getTodaysMatches\n    // HEARS: * matches\n    // \n    controller.hears('(?:[(?:\\w+)(?:\\s+)])*(match(?:es)?)', \n      'direct_message,direct_mention,ambient,mention',\n      async (bot, message) => { \n        if (message.match[1]) {\n          const standings = await getTodaysMatches();\n          bot.reply(message, `\\`\\`\\`\\n${standings}\\n\\`\\`\\``);\n        }\n    });\n\n    // \n    // perdicts who will win the world cup\n    // HEARS: * win\n    // \n    controller.hears('((who|what team|which team) will win)[(?:\\w+)(?:\\s+)]*', \n      'direct_message,direct_mention,ambient,mention',\n      async (bot, message) => { \n        if (message.match[1]) {\n          bot.reply(message, `:cbf: :cbf: :cbf: *BRASIL!!!* :cbf: :cbf: :cbf:`);\n        }\n    });\n};\n"
      ]
    },
    "mtime": 1529171630690
  },
  "{\"filename\":\"/app/skills/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "moment",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "moment"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getTodaysMatches",
            "stats",
            "getAllStandings",
            "formatUptime"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getTodaysMatches",
              "exported": "getTodaysMatches"
            },
            {
              "kind": "local",
              "local": "stats",
              "exported": "stats"
            },
            {
              "kind": "local",
              "local": "getAllStandings",
              "exported": "getAllStandings"
            },
            {
              "kind": "local",
              "local": "formatUptime",
              "exported": "formatUptime"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/skills/utils.js",
      "filenameRelative": "/app/skills/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatUptime = exports.getAllStandings = exports.stats = exports.getTodaysMatches = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /* \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                             UTILS \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n\n/*\n  \n  Types from api:\n    \n      TEAM: {\n        code: string\n        country: string\n        goals: number\n      },\n      EVENT: {\n        id: number,\n        player: string,\n        time: string,\n        type_of_event: string\n      }\n\n\n\n  */\n\nvar fetchData = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url) {\n    var response, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url, {\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt('return', data);\n\n          case 7:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function fetchData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getMatchSring = function getMatchSring(match) {\n  /*\n    MATCH: {\n      away_team: TEAM,\n      away_team_events: EVENT,\n      datetime: datetime,\n      fifa_id: \"300353632\"\n      home_team: TEAM\n      home_team_events: EVENT\n      last_event_update_at: ?\n      last_score_update_at: ?\n      location: string\n      status: 'future' | 'in progress' | 'full-time'\n      time: string | null\n      venue: string\n      winner: string | null\n      winner_code: string | null\n    }\n  */\n  if (stats === 'future') {\n    var time = (0, _moment2.default)('' + match.datetime).format('LT');\n    return time + '\\t\\t' + match.away_team.name + ' at ' + match.home_team.name;\n  } else if (stats === 'in progress') {\n    return match.time + ' ' + match.away_team.name + ': ' + match.away_team.goals + ' v ' + match.home_team.name + ': ' + match.home_team.goals;\n  }\n  return 'Final ' + match.away_team.name + ': ' + match.away_team.goals + '  ' + match.home_team.name + ': ' + match.home_team.goals;\n};\n\n// \n// TESTS / FIX strings\n// \nvar getTeamStandingString = function getTeamStandingString(team) {\n  return team.country + '\\t\\t\\t' + team.points + '\\t\\t\\t' + team.goal_differential;\n};\n\nvar getGroupStandings = function getGroupStandings(group) {\n  var lines = '';\n  _lodash2.default.forEach(group, function (team) {\n    lines = '' + lines + getTeamStandingString(team.team) + '\\n';\n  });\n  return lines;\n};\n\nvar getTodaysMatches = exports.getTodaysMatches = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var matches, lines;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchData('http://worldcup.sfg.io/matches/today');\n\n          case 2:\n            matches = _context2.sent;\n            lines = '';\n\n            _lodash2.default.forEach(matches, function (match) {\n              lines = '' + lines + getMatchSring(match) + '\\n';\n            });\n            return _context2.abrupt('return', lines);\n\n          case 6:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function getTodaysMatches() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar stats = exports.stats = {\n  triggers: 0,\n  convos: 0\n};\n\nvar getAllStandings = exports.getAllStandings = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var lines, standings;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            /*\n              [\n                {\n                  group: {\n                    id: number,\n                    letter: string,\n                    teams: [\n                      {\n                        team: {\n                          country: string,\n                          fifa_code: string,\n                          goal_differential: number,\n                          id: number,\n                          points: string\n                        }\n                      },\n                      ...\n                    ] \n                  }\n                },\n                ...\n               ]\n            */\n            lines = '';\n            _context3.next = 3;\n            return fetchData('http://worldcup.sfg.io/teams/group_results');\n\n          case 3:\n            standings = _context3.sent;\n\n            _lodash2.default.forEach(standings, function (group) {\n              lines = lines + 'Group ' + _lodash2.default.get(group, 'group.letter', '') + '\\n' + getGroupStandings(group.group) + '\\n';\n            });\n            return _context3.abrupt('return', lines);\n\n          case 6:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function getAllStandings() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar formatUptime = exports.formatUptime = function formatUptime(uptime) {\n  var unit = 'second';\n  if (uptime > 60) {\n    uptime = uptime / 60;\n    unit = 'minute';\n  }\n  if (uptime > 60) {\n    uptime = uptime / 60;\n    unit = 'hour';\n  }\n  if (uptime != 1) {\n    unit = unit + 's';\n  }\n  uptime = parseInt(uptime) + ' ' + unit;\n  return uptime;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "fetchData",
        "url",
        "fetch",
        "headers",
        "response",
        "json",
        "data",
        "getMatchSring",
        "match",
        "stats",
        "time",
        "datetime",
        "format",
        "away_team",
        "name",
        "home_team",
        "goals",
        "getTeamStandingString",
        "team",
        "country",
        "points",
        "goal_differential",
        "getGroupStandings",
        "group",
        "lines",
        "_",
        "forEach",
        "getTodaysMatches",
        "matches",
        "triggers",
        "convos",
        "getAllStandings",
        "standings",
        "get",
        "formatUptime",
        "uptime",
        "unit",
        "parseInt"
      ],
      "mappings": "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",
      "file": "utils.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "/* \n  UTILS \n */\n import _ from 'lodash';\n import moment from 'moment';\n\n/*\n  \n  Types from api:\n    \n      TEAM: {\n        code: string\n        country: string\n        goals: number\n      },\n      EVENT: {\n        id: number,\n        player: string,\n        time: string,\n        type_of_event: string\n      }\n\n\n\n  */\n\nconst fetchData = async (url) => {\n  const response = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  });\n\n  const data = await response.json()\n  return data;\n};\n\nconst getMatchSring = (match) => {\n  /*\n    MATCH: {\n      away_team: TEAM,\n      away_team_events: EVENT,\n      datetime: datetime,\n      fifa_id: \"300353632\"\n      home_team: TEAM\n      home_team_events: EVENT\n      last_event_update_at: ?\n      last_score_update_at: ?\n      location: string\n      status: 'future' | 'in progress' | 'full-time'\n      time: string | null\n      venue: string\n      winner: string | null\n      winner_code: string | null\n    }\n  */\n  if (stats === 'future') {\n    const time = moment(`${match.datetime}`).format('LT');\n    return `${time}\\t\\t${match.away_team.name} at ${match.home_team.name}`;\n  } else if (stats === 'in progress') {\n    return `${match.time} ${match.away_team.name}: ${match.away_team.goals} v ${match.home_team.name}: ${match.home_team.goals}`;\n  }\n  return `Final ${match.away_team.name}: ${match.away_team.goals}  ${match.home_team.name}: ${match.home_team.goals}`;\n};\n\n// \n// TESTS / FIX strings\n// \nconst getTeamStandingString = (team) => {\n  return `${team.country}\\t\\t\\t${team.points}\\t\\t\\t${team.goal_differential}`\n};\n\nconst getGroupStandings = (group) => {\n  let lines = '';\n  _.forEach(group, (team) => {\n    lines = `${lines}${getTeamStandingString(team.team)}\\n`;\n  });\n  return lines;\n};\n\nexport const getTodaysMatches = async () => {\n  /*\n    [\n      MATCH,\n      ...\n    ]\n  */\n  const matches = await fetchData('http://worldcup.sfg.io/matches/today');\n  let lines = '';  \n  _.forEach(matches, (match) => {\n    lines = `${lines}${getMatchSring(match)}\\n`\n  });\n  return lines;\n};\n\nexport const stats = {\n    triggers: 0,\n    convos: 0,\n};\n\nexport const getAllStandings = async () => {\n  /*\n    [\n      {\n        group: {\n          id: number,\n          letter: string,\n          teams: [\n            {\n              team: {\n                country: string,\n                fifa_code: string,\n                goal_differential: number,\n                id: number,\n                points: string\n              }\n            },\n            ...\n          ] \n        }\n      },\n      ...\n\n    ]\n  */\n  let lines = '';\n  const standings = await fetchData('http://worldcup.sfg.io/teams/group_results');\n  _.forEach(standings, (group) => {\n    lines = `${lines}Group ${_.get(group, 'group.letter', '')}\\n${getGroupStandings(group.group)}\\n`;\n  });\n  return lines;\n};\n\nexport const formatUptime = (uptime) => {\n  let unit = 'second';\n  if (uptime > 60) {\n    uptime = uptime / 60;\n    unit = 'minute';\n  }\n  if (uptime > 60) {\n    uptime = uptime / 60;\n    unit = 'hour';\n  }\n  if (uptime != 1) {\n    unit = unit + 's';\n  }\n  uptime = parseInt(uptime) + ' ' + unit;\n  return uptime;\n};\n"
      ]
    },
    "mtime": 1529171651693
  },
  "{\"filename\":\"/app/skills/help.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/help.js",
      "filenameRelative": "/app/skills/help.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "help.js",
      "sourceFileName": "help.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "help"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function (controller) {\n\n    // This before middleware allows the help command to accept sub-thread names as a parameter\n    // so users can say help to get the default thread, but help <subthread> will automatically\n    // jump to that subthread (if it exists)\n    controller.studio.before('help', function (convo, next) {\n\n        // is there a parameter on the help command?\n        // if so, change topic.\n        if (matches = convo.source_message.text.match(/^help (.*)/i)) {\n            if (convo.hasThread(matches[1])) {\n                convo.gotoThread(matches[1]);\n            }\n        }\n\n        next();\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHAuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRyb2xsZXIiLCJzdHVkaW8iLCJiZWZvcmUiLCJjb252byIsIm5leHQiLCJtYXRjaGVzIiwic291cmNlX21lc3NhZ2UiLCJ0ZXh0IiwibWF0Y2giLCJoYXNUaHJlYWQiLCJnb3RvVGhyZWFkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFVBQVQsRUFBcUI7O0FBR2xDO0FBQ0E7QUFDQTtBQUNBQSxlQUFXQyxNQUFYLENBQWtCQyxNQUFsQixDQUF5QixNQUF6QixFQUFpQyxVQUFTQyxLQUFULEVBQWdCQyxJQUFoQixFQUFzQjs7QUFFbkQ7QUFDQTtBQUNBLFlBQUlDLFVBQVVGLE1BQU1HLGNBQU4sQ0FBcUJDLElBQXJCLENBQTBCQyxLQUExQixDQUFnQyxhQUFoQyxDQUFkLEVBQThEO0FBQzFELGdCQUFJTCxNQUFNTSxTQUFOLENBQWdCSixRQUFRLENBQVIsQ0FBaEIsQ0FBSixFQUFpQztBQUM3QkYsc0JBQU1PLFVBQU4sQ0FBaUJMLFFBQVEsQ0FBUixDQUFqQjtBQUNIO0FBQ0o7O0FBRUREO0FBRUgsS0FaRDtBQWNILENBcEJEIiwiZmlsZSI6ImhlbHAuanMiLCJzb3VyY2VSb290IjoiL2FwcC9za2lsbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbnRyb2xsZXIpIHtcblxuXG4gICAgLy8gVGhpcyBiZWZvcmUgbWlkZGxld2FyZSBhbGxvd3MgdGhlIGhlbHAgY29tbWFuZCB0byBhY2NlcHQgc3ViLXRocmVhZCBuYW1lcyBhcyBhIHBhcmFtZXRlclxuICAgIC8vIHNvIHVzZXJzIGNhbiBzYXkgaGVscCB0byBnZXQgdGhlIGRlZmF1bHQgdGhyZWFkLCBidXQgaGVscCA8c3VidGhyZWFkPiB3aWxsIGF1dG9tYXRpY2FsbHlcbiAgICAvLyBqdW1wIHRvIHRoYXQgc3VidGhyZWFkIChpZiBpdCBleGlzdHMpXG4gICAgY29udHJvbGxlci5zdHVkaW8uYmVmb3JlKCdoZWxwJywgZnVuY3Rpb24oY29udm8sIG5leHQpIHtcblxuICAgICAgICAvLyBpcyB0aGVyZSBhIHBhcmFtZXRlciBvbiB0aGUgaGVscCBjb21tYW5kP1xuICAgICAgICAvLyBpZiBzbywgY2hhbmdlIHRvcGljLlxuICAgICAgICBpZiAobWF0Y2hlcyA9IGNvbnZvLnNvdXJjZV9tZXNzYWdlLnRleHQubWF0Y2goL15oZWxwICguKikvaSkpIHtcbiAgICAgICAgICAgIGlmIChjb252by5oYXNUaHJlYWQobWF0Y2hlc1sxXSkpIHtcbiAgICAgICAgICAgICAgICBjb252by5nb3RvVGhyZWFkKG1hdGNoZXNbMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbmV4dCgpO1xuXG4gICAgfSk7XG5cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "help.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "studio",
        "before",
        "convo",
        "next",
        "matches",
        "source_message",
        "text",
        "match",
        "hasThread",
        "gotoThread"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAGlC;AACA;AACA;AACAA,eAAWC,MAAX,CAAkBC,MAAlB,CAAyB,MAAzB,EAAiC,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;;AAEnD;AACA;AACA,YAAIC,UAAUF,MAAMG,cAAN,CAAqBC,IAArB,CAA0BC,KAA1B,CAAgC,aAAhC,CAAd,EAA8D;AAC1D,gBAAIL,MAAMM,SAAN,CAAgBJ,QAAQ,CAAR,CAAhB,CAAJ,EAAiC;AAC7BF,sBAAMO,UAAN,CAAiBL,QAAQ,CAAR,CAAjB;AACH;AACJ;;AAEDD;AAEH,KAZD;AAcH,CApBD",
      "file": "help.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "module.exports = function(controller) {\n\n\n    // This before middleware allows the help command to accept sub-thread names as a parameter\n    // so users can say help to get the default thread, but help <subthread> will automatically\n    // jump to that subthread (if it exists)\n    controller.studio.before('help', function(convo, next) {\n\n        // is there a parameter on the help command?\n        // if so, change topic.\n        if (matches = convo.source_message.text.match(/^help (.*)/i)) {\n            if (convo.hasThread(matches[1])) {\n                convo.gotoThread(matches[1]);\n            }\n        }\n\n        next();\n\n    });\n\n}\n"
      ]
    },
    "mtime": 1527880291561
  },
  "{\"filename\":\"/app/skills/interactive_messages.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/interactive_messages.js",
      "filenameRelative": "/app/skills/interactive_messages.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "interactive_messages.js",
      "sourceFileName": "interactive_messages.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "interactive_messages"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function (controller) {\n\n    // create special handlers for certain actions in buttons\n    // if the button action is 'say', act as if user said that thing\n    controller.middleware.receive.use(function (bot, message, next) {\n        if (message.type == 'interactive_message_callback') {\n            if (message.actions[0].name.match(/^say$/)) {\n                var reply = message.original_message;\n\n                for (var a = 0; a < reply.attachments.length; a++) {\n                    reply.attachments[a].actions = null;\n                }\n\n                var person = '<@' + message.user + '>';\n                if (message.channel[0] == 'D') {\n                    person = 'You';\n                }\n\n                reply.attachments.push({\n                    text: person + ' said, ' + message.actions[0].value\n                });\n\n                bot.replyInteractive(message, reply);\n            }\n        }\n\n        next();\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyYWN0aXZlX21lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyIiwibWlkZGxld2FyZSIsInJlY2VpdmUiLCJ1c2UiLCJib3QiLCJtZXNzYWdlIiwibmV4dCIsInR5cGUiLCJhY3Rpb25zIiwibmFtZSIsIm1hdGNoIiwicmVwbHkiLCJvcmlnaW5hbF9tZXNzYWdlIiwiYSIsImF0dGFjaG1lbnRzIiwibGVuZ3RoIiwicGVyc29uIiwidXNlciIsImNoYW5uZWwiLCJwdXNoIiwidGV4dCIsInZhbHVlIiwicmVwbHlJbnRlcmFjdGl2ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxVQUFULEVBQXFCOztBQUVsQztBQUNBO0FBQ0FBLGVBQVdDLFVBQVgsQ0FBc0JDLE9BQXRCLENBQThCQyxHQUE5QixDQUFrQyxVQUFTQyxHQUFULEVBQWNDLE9BQWQsRUFBdUJDLElBQXZCLEVBQTZCO0FBQzdELFlBQUlELFFBQVFFLElBQVIsSUFBZ0IsOEJBQXBCLEVBQW9EO0FBQ2xELGdCQUFJRixRQUFRRyxPQUFSLENBQWdCLENBQWhCLEVBQW1CQyxJQUFuQixDQUF3QkMsS0FBeEIsQ0FBOEIsT0FBOUIsQ0FBSixFQUE0QztBQUN4QyxvQkFBSUMsUUFBUU4sUUFBUU8sZ0JBQXBCOztBQUVBLHFCQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUYsTUFBTUcsV0FBTixDQUFrQkMsTUFBdEMsRUFBOENGLEdBQTlDLEVBQW1EO0FBQy9DRiwwQkFBTUcsV0FBTixDQUFrQkQsQ0FBbEIsRUFBcUJMLE9BQXJCLEdBQStCLElBQS9CO0FBQ0g7O0FBRUQsb0JBQUlRLFNBQVMsT0FBT1gsUUFBUVksSUFBZixHQUFzQixHQUFuQztBQUNBLG9CQUFJWixRQUFRYSxPQUFSLENBQWdCLENBQWhCLEtBQXNCLEdBQTFCLEVBQStCO0FBQzNCRiw2QkFBUyxLQUFUO0FBQ0g7O0FBRURMLHNCQUFNRyxXQUFOLENBQWtCSyxJQUFsQixDQUNJO0FBQ0lDLDBCQUFNSixTQUFTLFNBQVQsR0FBcUJYLFFBQVFHLE9BQVIsQ0FBZ0IsQ0FBaEIsRUFBbUJhO0FBRGxELGlCQURKOztBQU1BakIsb0JBQUlrQixnQkFBSixDQUFxQmpCLE9BQXJCLEVBQThCTSxLQUE5QjtBQUVGO0FBQ0g7O0FBRURMO0FBRUQsS0EzQkQ7QUE2QkgsQ0FqQ0QiLCJmaWxlIjoiaW50ZXJhY3RpdmVfbWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9za2lsbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbnRyb2xsZXIpIHtcblxuICAgIC8vIGNyZWF0ZSBzcGVjaWFsIGhhbmRsZXJzIGZvciBjZXJ0YWluIGFjdGlvbnMgaW4gYnV0dG9uc1xuICAgIC8vIGlmIHRoZSBidXR0b24gYWN0aW9uIGlzICdzYXknLCBhY3QgYXMgaWYgdXNlciBzYWlkIHRoYXQgdGhpbmdcbiAgICBjb250cm9sbGVyLm1pZGRsZXdhcmUucmVjZWl2ZS51c2UoZnVuY3Rpb24oYm90LCBtZXNzYWdlLCBuZXh0KSB7XG4gICAgICBpZiAobWVzc2FnZS50eXBlID09ICdpbnRlcmFjdGl2ZV9tZXNzYWdlX2NhbGxiYWNrJykge1xuICAgICAgICBpZiAobWVzc2FnZS5hY3Rpb25zWzBdLm5hbWUubWF0Y2goL15zYXkkLykpIHtcbiAgICAgICAgICAgIHZhciByZXBseSA9IG1lc3NhZ2Uub3JpZ2luYWxfbWVzc2FnZTtcblxuICAgICAgICAgICAgZm9yICh2YXIgYSA9IDA7IGEgPCByZXBseS5hdHRhY2htZW50cy5sZW5ndGg7IGErKykge1xuICAgICAgICAgICAgICAgIHJlcGx5LmF0dGFjaG1lbnRzW2FdLmFjdGlvbnMgPSBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcGVyc29uID0gJzxAJyArIG1lc3NhZ2UudXNlciArICc+JztcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLmNoYW5uZWxbMF0gPT0gJ0QnKSB7XG4gICAgICAgICAgICAgICAgcGVyc29uID0gJ1lvdSc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlcGx5LmF0dGFjaG1lbnRzLnB1c2goXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBwZXJzb24gKyAnIHNhaWQsICcgKyBtZXNzYWdlLmFjdGlvbnNbMF0udmFsdWUsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgYm90LnJlcGx5SW50ZXJhY3RpdmUobWVzc2FnZSwgcmVwbHkpO1xuICBcbiAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgbmV4dCgpOyAgICBcbiAgICAgIFxuICAgIH0pO1xuXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "interactive_messages.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "middleware",
        "receive",
        "use",
        "bot",
        "message",
        "next",
        "type",
        "actions",
        "name",
        "match",
        "reply",
        "original_message",
        "a",
        "attachments",
        "length",
        "person",
        "user",
        "channel",
        "push",
        "text",
        "value",
        "replyInteractive"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElC;AACA;AACAA,eAAWC,UAAX,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAASC,GAAT,EAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC7D,YAAID,QAAQE,IAAR,IAAgB,8BAApB,EAAoD;AAClD,gBAAIF,QAAQG,OAAR,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwBC,KAAxB,CAA8B,OAA9B,CAAJ,EAA4C;AACxC,oBAAIC,QAAQN,QAAQO,gBAApB;;AAEA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,WAAN,CAAkBC,MAAtC,EAA8CF,GAA9C,EAAmD;AAC/CF,0BAAMG,WAAN,CAAkBD,CAAlB,EAAqBL,OAArB,GAA+B,IAA/B;AACH;;AAED,oBAAIQ,SAAS,OAAOX,QAAQY,IAAf,GAAsB,GAAnC;AACA,oBAAIZ,QAAQa,OAAR,CAAgB,CAAhB,KAAsB,GAA1B,EAA+B;AAC3BF,6BAAS,KAAT;AACH;;AAEDL,sBAAMG,WAAN,CAAkBK,IAAlB,CACI;AACIC,0BAAMJ,SAAS,SAAT,GAAqBX,QAAQG,OAAR,CAAgB,CAAhB,EAAmBa;AADlD,iBADJ;;AAMAjB,oBAAIkB,gBAAJ,CAAqBjB,OAArB,EAA8BM,KAA9B;AAEF;AACH;;AAEDL;AAED,KA3BD;AA6BH,CAjCD",
      "file": "interactive_messages.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "module.exports = function(controller) {\n\n    // create special handlers for certain actions in buttons\n    // if the button action is 'say', act as if user said that thing\n    controller.middleware.receive.use(function(bot, message, next) {\n      if (message.type == 'interactive_message_callback') {\n        if (message.actions[0].name.match(/^say$/)) {\n            var reply = message.original_message;\n\n            for (var a = 0; a < reply.attachments.length; a++) {\n                reply.attachments[a].actions = null;\n            }\n\n            var person = '<@' + message.user + '>';\n            if (message.channel[0] == 'D') {\n                person = 'You';\n            }\n\n            reply.attachments.push(\n                {\n                    text: person + ' said, ' + message.actions[0].value,\n                }\n            );\n\n            bot.replyInteractive(message, reply);\n  \n         }\n      }\n      \n      next();    \n      \n    });\n\n}\n"
      ]
    },
    "mtime": 1527880291049
  },
  "{\"filename\":\"/app/skills/sample_conversations.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/sample_conversations.js",
      "filenameRelative": "/app/skills/sample_conversations.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sample_conversations.js",
      "sourceFileName": "sample_conversations.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sample_conversations"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n\nWHAT IS THIS?\n\nThis module demonstrates simple uses of Botkit's conversation system.\n\nIn this example, Botkit hears a keyword, then asks a question. Different paths\nthrough the conversation are chosen based on the user's response.\n\n*/\n\nmodule.exports = function (controller) {\n\n    controller.hears(['color'], 'direct_message,direct_mention', function (bot, message) {\n\n        bot.startConversation(message, function (err, convo) {\n            convo.say('This is an example of using convo.ask with a single callback.');\n\n            convo.ask('What is your favorite color?', function (response, convo) {\n\n                convo.say('Cool, I like ' + response.text + ' too!');\n                convo.next();\n            });\n        });\n    });\n\n    controller.hears(['question'], 'direct_message,direct_mention', function (bot, message) {\n\n        bot.createConversation(message, function (err, convo) {\n\n            // create a path for when a user says YES\n            convo.addMessage({\n                text: 'How wonderful.'\n            }, 'yes_thread');\n\n            // create a path for when a user says NO\n            // mark the conversation as unsuccessful at the end\n            convo.addMessage({\n                text: 'Cheese! It is not for everyone.',\n                action: 'stop' // this marks the converation as unsuccessful\n            }, 'no_thread');\n\n            // create a path where neither option was matched\n            // this message has an action field, which directs botkit to go back to the `default` thread after sending this message.\n            convo.addMessage({\n                text: 'Sorry I did not understand. Say `yes` or `no`',\n                action: 'default'\n            }, 'bad_response');\n\n            // Create a yes/no question in the default thread...\n            convo.ask('Do you like cheese?', [{\n                pattern: bot.utterances.yes,\n                callback: function callback(response, convo) {\n                    convo.gotoThread('yes_thread');\n                }\n            }, {\n                pattern: bot.utterances.no,\n                callback: function callback(response, convo) {\n                    convo.gotoThread('no_thread');\n                }\n            }, {\n                default: true,\n                callback: function callback(response, convo) {\n                    convo.gotoThread('bad_response');\n                }\n            }]);\n\n            convo.activate();\n\n            // capture the results of the conversation and see what happened...\n            convo.on('end', function (convo) {\n\n                if (convo.successful()) {\n                    // this still works to send individual replies...\n                    bot.reply(message, 'Let us eat some!');\n\n                    // and now deliver cheese via tcp/ip...\n                }\n            });\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbXBsZV9jb252ZXJzYXRpb25zLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyIiwiaGVhcnMiLCJib3QiLCJtZXNzYWdlIiwic3RhcnRDb252ZXJzYXRpb24iLCJlcnIiLCJjb252byIsInNheSIsImFzayIsInJlc3BvbnNlIiwidGV4dCIsIm5leHQiLCJjcmVhdGVDb252ZXJzYXRpb24iLCJhZGRNZXNzYWdlIiwiYWN0aW9uIiwicGF0dGVybiIsInV0dGVyYW5jZXMiLCJ5ZXMiLCJjYWxsYmFjayIsImdvdG9UaHJlYWQiLCJubyIsImRlZmF1bHQiLCJhY3RpdmF0ZSIsIm9uIiwic3VjY2Vzc2Z1bCIsInJlcGx5Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7OztBQVdBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFVBQVQsRUFBcUI7O0FBRWxDQSxlQUFXQyxLQUFYLENBQWlCLENBQUMsT0FBRCxDQUFqQixFQUE0QiwrQkFBNUIsRUFBNkQsVUFBU0MsR0FBVCxFQUFjQyxPQUFkLEVBQXVCOztBQUVoRkQsWUFBSUUsaUJBQUosQ0FBc0JELE9BQXRCLEVBQStCLFVBQVNFLEdBQVQsRUFBY0MsS0FBZCxFQUFxQjtBQUNoREEsa0JBQU1DLEdBQU4sQ0FBVSwrREFBVjs7QUFFQUQsa0JBQU1FLEdBQU4sQ0FBVSw4QkFBVixFQUEwQyxVQUFTQyxRQUFULEVBQW1CSCxLQUFuQixFQUEwQjs7QUFFaEVBLHNCQUFNQyxHQUFOLENBQVUsa0JBQWtCRSxTQUFTQyxJQUEzQixHQUFrQyxPQUE1QztBQUNBSixzQkFBTUssSUFBTjtBQUVILGFBTEQ7QUFNSCxTQVREO0FBV0gsS0FiRDs7QUFnQkFYLGVBQVdDLEtBQVgsQ0FBaUIsQ0FBQyxVQUFELENBQWpCLEVBQStCLCtCQUEvQixFQUFnRSxVQUFTQyxHQUFULEVBQWNDLE9BQWQsRUFBdUI7O0FBRW5GRCxZQUFJVSxrQkFBSixDQUF1QlQsT0FBdkIsRUFBZ0MsVUFBU0UsR0FBVCxFQUFjQyxLQUFkLEVBQXFCOztBQUVqRDtBQUNBQSxrQkFBTU8sVUFBTixDQUFpQjtBQUNUSCxzQkFBTTtBQURHLGFBQWpCLEVBRUUsWUFGRjs7QUFJQTtBQUNBO0FBQ0FKLGtCQUFNTyxVQUFOLENBQWlCO0FBQ2JILHNCQUFNLGlDQURPO0FBRWJJLHdCQUFRLE1BRkssQ0FFRztBQUZILGFBQWpCLEVBR0UsV0FIRjs7QUFLQTtBQUNBO0FBQ0FSLGtCQUFNTyxVQUFOLENBQWlCO0FBQ2JILHNCQUFNLCtDQURPO0FBRWJJLHdCQUFRO0FBRkssYUFBakIsRUFHRSxjQUhGOztBQUtBO0FBQ0FSLGtCQUFNRSxHQUFOLENBQVUscUJBQVYsRUFBaUMsQ0FDN0I7QUFDSU8seUJBQVViLElBQUljLFVBQUosQ0FBZUMsR0FEN0I7QUFFSUMsMEJBQVUsa0JBQVNULFFBQVQsRUFBbUJILEtBQW5CLEVBQTBCO0FBQ2hDQSwwQkFBTWEsVUFBTixDQUFpQixZQUFqQjtBQUNIO0FBSkwsYUFENkIsRUFPN0I7QUFDSUoseUJBQVViLElBQUljLFVBQUosQ0FBZUksRUFEN0I7QUFFSUYsMEJBQVUsa0JBQVNULFFBQVQsRUFBbUJILEtBQW5CLEVBQTBCO0FBQ2hDQSwwQkFBTWEsVUFBTixDQUFpQixXQUFqQjtBQUNIO0FBSkwsYUFQNkIsRUFhN0I7QUFDSUUseUJBQVMsSUFEYjtBQUVJSCwwQkFBVSxrQkFBU1QsUUFBVCxFQUFtQkgsS0FBbkIsRUFBMEI7QUFDaENBLDBCQUFNYSxVQUFOLENBQWlCLGNBQWpCO0FBQ0g7QUFKTCxhQWI2QixDQUFqQzs7QUFxQkFiLGtCQUFNZ0IsUUFBTjs7QUFFQTtBQUNBaEIsa0JBQU1pQixFQUFOLENBQVMsS0FBVCxFQUFnQixVQUFTakIsS0FBVCxFQUFnQjs7QUFFNUIsb0JBQUlBLE1BQU1rQixVQUFOLEVBQUosRUFBd0I7QUFDcEI7QUFDQXRCLHdCQUFJdUIsS0FBSixDQUFVdEIsT0FBVixFQUFtQixrQkFBbkI7O0FBRUE7QUFDSDtBQUVKLGFBVEQ7QUFVSCxTQXhERDtBQTBESCxLQTVERDtBQThESCxDQWhGRCIsImZpbGUiOiJzYW1wbGVfY29udmVyc2F0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NraWxscyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cbldIQVQgSVMgVEhJUz9cblxuVGhpcyBtb2R1bGUgZGVtb25zdHJhdGVzIHNpbXBsZSB1c2VzIG9mIEJvdGtpdCdzIGNvbnZlcnNhdGlvbiBzeXN0ZW0uXG5cbkluIHRoaXMgZXhhbXBsZSwgQm90a2l0IGhlYXJzIGEga2V5d29yZCwgdGhlbiBhc2tzIGEgcXVlc3Rpb24uIERpZmZlcmVudCBwYXRoc1xudGhyb3VnaCB0aGUgY29udmVyc2F0aW9uIGFyZSBjaG9zZW4gYmFzZWQgb24gdGhlIHVzZXIncyByZXNwb25zZS5cblxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb250cm9sbGVyKSB7XG5cbiAgICBjb250cm9sbGVyLmhlYXJzKFsnY29sb3InXSwgJ2RpcmVjdF9tZXNzYWdlLGRpcmVjdF9tZW50aW9uJywgZnVuY3Rpb24oYm90LCBtZXNzYWdlKSB7XG5cbiAgICAgICAgYm90LnN0YXJ0Q29udmVyc2F0aW9uKG1lc3NhZ2UsIGZ1bmN0aW9uKGVyciwgY29udm8pIHtcbiAgICAgICAgICAgIGNvbnZvLnNheSgnVGhpcyBpcyBhbiBleGFtcGxlIG9mIHVzaW5nIGNvbnZvLmFzayB3aXRoIGEgc2luZ2xlIGNhbGxiYWNrLicpO1xuXG4gICAgICAgICAgICBjb252by5hc2soJ1doYXQgaXMgeW91ciBmYXZvcml0ZSBjb2xvcj8nLCBmdW5jdGlvbihyZXNwb25zZSwgY29udm8pIHtcblxuICAgICAgICAgICAgICAgIGNvbnZvLnNheSgnQ29vbCwgSSBsaWtlICcgKyByZXNwb25zZS50ZXh0ICsgJyB0b28hJyk7XG4gICAgICAgICAgICAgICAgY29udm8ubmV4dCgpO1xuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxuXG4gICAgY29udHJvbGxlci5oZWFycyhbJ3F1ZXN0aW9uJ10sICdkaXJlY3RfbWVzc2FnZSxkaXJlY3RfbWVudGlvbicsIGZ1bmN0aW9uKGJvdCwgbWVzc2FnZSkge1xuXG4gICAgICAgIGJvdC5jcmVhdGVDb252ZXJzYXRpb24obWVzc2FnZSwgZnVuY3Rpb24oZXJyLCBjb252bykge1xuXG4gICAgICAgICAgICAvLyBjcmVhdGUgYSBwYXRoIGZvciB3aGVuIGEgdXNlciBzYXlzIFlFU1xuICAgICAgICAgICAgY29udm8uYWRkTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIHRleHQ6ICdIb3cgd29uZGVyZnVsLicsXG4gICAgICAgICAgICB9LCd5ZXNfdGhyZWFkJyk7XG5cbiAgICAgICAgICAgIC8vIGNyZWF0ZSBhIHBhdGggZm9yIHdoZW4gYSB1c2VyIHNheXMgTk9cbiAgICAgICAgICAgIC8vIG1hcmsgdGhlIGNvbnZlcnNhdGlvbiBhcyB1bnN1Y2Nlc3NmdWwgYXQgdGhlIGVuZFxuICAgICAgICAgICAgY29udm8uYWRkTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgdGV4dDogJ0NoZWVzZSEgSXQgaXMgbm90IGZvciBldmVyeW9uZS4nLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogJ3N0b3AnLCAvLyB0aGlzIG1hcmtzIHRoZSBjb252ZXJhdGlvbiBhcyB1bnN1Y2Nlc3NmdWxcbiAgICAgICAgICAgIH0sJ25vX3RocmVhZCcpO1xuXG4gICAgICAgICAgICAvLyBjcmVhdGUgYSBwYXRoIHdoZXJlIG5laXRoZXIgb3B0aW9uIHdhcyBtYXRjaGVkXG4gICAgICAgICAgICAvLyB0aGlzIG1lc3NhZ2UgaGFzIGFuIGFjdGlvbiBmaWVsZCwgd2hpY2ggZGlyZWN0cyBib3RraXQgdG8gZ28gYmFjayB0byB0aGUgYGRlZmF1bHRgIHRocmVhZCBhZnRlciBzZW5kaW5nIHRoaXMgbWVzc2FnZS5cbiAgICAgICAgICAgIGNvbnZvLmFkZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIHRleHQ6ICdTb3JyeSBJIGRpZCBub3QgdW5kZXJzdGFuZC4gU2F5IGB5ZXNgIG9yIGBub2AnLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogJ2RlZmF1bHQnLFxuICAgICAgICAgICAgfSwnYmFkX3Jlc3BvbnNlJyk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHllcy9ubyBxdWVzdGlvbiBpbiB0aGUgZGVmYXVsdCB0aHJlYWQuLi5cbiAgICAgICAgICAgIGNvbnZvLmFzaygnRG8geW91IGxpa2UgY2hlZXNlPycsIFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm46ICBib3QudXR0ZXJhbmNlcy55ZXMsXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbihyZXNwb25zZSwgY29udm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZvLmdvdG9UaHJlYWQoJ3llc190aHJlYWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogIGJvdC51dHRlcmFuY2VzLm5vLFxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24ocmVzcG9uc2UsIGNvbnZvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb252by5nb3RvVGhyZWFkKCdub190aHJlYWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKHJlc3BvbnNlLCBjb252bykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udm8uZ290b1RocmVhZCgnYmFkX3Jlc3BvbnNlJyk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgICAgIGNvbnZvLmFjdGl2YXRlKCk7XG5cbiAgICAgICAgICAgIC8vIGNhcHR1cmUgdGhlIHJlc3VsdHMgb2YgdGhlIGNvbnZlcnNhdGlvbiBhbmQgc2VlIHdoYXQgaGFwcGVuZWQuLi5cbiAgICAgICAgICAgIGNvbnZvLm9uKCdlbmQnLCBmdW5jdGlvbihjb252bykge1xuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnZvLnN1Y2Nlc3NmdWwoKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIHN0aWxsIHdvcmtzIHRvIHNlbmQgaW5kaXZpZHVhbCByZXBsaWVzLi4uXG4gICAgICAgICAgICAgICAgICAgIGJvdC5yZXBseShtZXNzYWdlLCAnTGV0IHVzIGVhdCBzb21lIScpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuZCBub3cgZGVsaXZlciBjaGVlc2UgdmlhIHRjcC9pcC4uLlxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG5cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sample_conversations.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "hears",
        "bot",
        "message",
        "startConversation",
        "err",
        "convo",
        "say",
        "ask",
        "response",
        "text",
        "next",
        "createConversation",
        "addMessage",
        "action",
        "pattern",
        "utterances",
        "yes",
        "callback",
        "gotoThread",
        "no",
        "default",
        "activate",
        "on",
        "successful",
        "reply"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;AAWAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElCA,eAAWC,KAAX,CAAiB,CAAC,OAAD,CAAjB,EAA4B,+BAA5B,EAA6D,UAASC,GAAT,EAAcC,OAAd,EAAuB;;AAEhFD,YAAIE,iBAAJ,CAAsBD,OAAtB,EAA+B,UAASE,GAAT,EAAcC,KAAd,EAAqB;AAChDA,kBAAMC,GAAN,CAAU,+DAAV;;AAEAD,kBAAME,GAAN,CAAU,8BAAV,EAA0C,UAASC,QAAT,EAAmBH,KAAnB,EAA0B;;AAEhEA,sBAAMC,GAAN,CAAU,kBAAkBE,SAASC,IAA3B,GAAkC,OAA5C;AACAJ,sBAAMK,IAAN;AAEH,aALD;AAMH,SATD;AAWH,KAbD;;AAgBAX,eAAWC,KAAX,CAAiB,CAAC,UAAD,CAAjB,EAA+B,+BAA/B,EAAgE,UAASC,GAAT,EAAcC,OAAd,EAAuB;;AAEnFD,YAAIU,kBAAJ,CAAuBT,OAAvB,EAAgC,UAASE,GAAT,EAAcC,KAAd,EAAqB;;AAEjD;AACAA,kBAAMO,UAAN,CAAiB;AACTH,sBAAM;AADG,aAAjB,EAEE,YAFF;;AAIA;AACA;AACAJ,kBAAMO,UAAN,CAAiB;AACbH,sBAAM,iCADO;AAEbI,wBAAQ,MAFK,CAEG;AAFH,aAAjB,EAGE,WAHF;;AAKA;AACA;AACAR,kBAAMO,UAAN,CAAiB;AACbH,sBAAM,+CADO;AAEbI,wBAAQ;AAFK,aAAjB,EAGE,cAHF;;AAKA;AACAR,kBAAME,GAAN,CAAU,qBAAV,EAAiC,CAC7B;AACIO,yBAAUb,IAAIc,UAAJ,CAAeC,GAD7B;AAEIC,0BAAU,kBAAST,QAAT,EAAmBH,KAAnB,EAA0B;AAChCA,0BAAMa,UAAN,CAAiB,YAAjB;AACH;AAJL,aAD6B,EAO7B;AACIJ,yBAAUb,IAAIc,UAAJ,CAAeI,EAD7B;AAEIF,0BAAU,kBAAST,QAAT,EAAmBH,KAAnB,EAA0B;AAChCA,0BAAMa,UAAN,CAAiB,WAAjB;AACH;AAJL,aAP6B,EAa7B;AACIE,yBAAS,IADb;AAEIH,0BAAU,kBAAST,QAAT,EAAmBH,KAAnB,EAA0B;AAChCA,0BAAMa,UAAN,CAAiB,cAAjB;AACH;AAJL,aAb6B,CAAjC;;AAqBAb,kBAAMgB,QAAN;;AAEA;AACAhB,kBAAMiB,EAAN,CAAS,KAAT,EAAgB,UAASjB,KAAT,EAAgB;;AAE5B,oBAAIA,MAAMkB,UAAN,EAAJ,EAAwB;AACpB;AACAtB,wBAAIuB,KAAJ,CAAUtB,OAAV,EAAmB,kBAAnB;;AAEA;AACH;AAEJ,aATD;AAUH,SAxDD;AA0DH,KA5DD;AA8DH,CAhFD",
      "file": "sample_conversations.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "/*\n\nWHAT IS THIS?\n\nThis module demonstrates simple uses of Botkit's conversation system.\n\nIn this example, Botkit hears a keyword, then asks a question. Different paths\nthrough the conversation are chosen based on the user's response.\n\n*/\n\nmodule.exports = function(controller) {\n\n    controller.hears(['color'], 'direct_message,direct_mention', function(bot, message) {\n\n        bot.startConversation(message, function(err, convo) {\n            convo.say('This is an example of using convo.ask with a single callback.');\n\n            convo.ask('What is your favorite color?', function(response, convo) {\n\n                convo.say('Cool, I like ' + response.text + ' too!');\n                convo.next();\n\n            });\n        });\n\n    });\n\n\n    controller.hears(['question'], 'direct_message,direct_mention', function(bot, message) {\n\n        bot.createConversation(message, function(err, convo) {\n\n            // create a path for when a user says YES\n            convo.addMessage({\n                    text: 'How wonderful.',\n            },'yes_thread');\n\n            // create a path for when a user says NO\n            // mark the conversation as unsuccessful at the end\n            convo.addMessage({\n                text: 'Cheese! It is not for everyone.',\n                action: 'stop', // this marks the converation as unsuccessful\n            },'no_thread');\n\n            // create a path where neither option was matched\n            // this message has an action field, which directs botkit to go back to the `default` thread after sending this message.\n            convo.addMessage({\n                text: 'Sorry I did not understand. Say `yes` or `no`',\n                action: 'default',\n            },'bad_response');\n\n            // Create a yes/no question in the default thread...\n            convo.ask('Do you like cheese?', [\n                {\n                    pattern:  bot.utterances.yes,\n                    callback: function(response, convo) {\n                        convo.gotoThread('yes_thread');\n                    },\n                },\n                {\n                    pattern:  bot.utterances.no,\n                    callback: function(response, convo) {\n                        convo.gotoThread('no_thread');\n                    },\n                },\n                {\n                    default: true,\n                    callback: function(response, convo) {\n                        convo.gotoThread('bad_response');\n                    },\n                }\n            ]);\n\n            convo.activate();\n\n            // capture the results of the conversation and see what happened...\n            convo.on('end', function(convo) {\n\n                if (convo.successful()) {\n                    // this still works to send individual replies...\n                    bot.reply(message, 'Let us eat some!');\n\n                    // and now deliver cheese via tcp/ip...\n                }\n\n            });\n        });\n\n    });\n\n};\n"
      ]
    },
    "mtime": 1527880289909
  },
  "{\"filename\":\"/app/skills/sample_events.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/sample_events.js",
      "filenameRelative": "/app/skills/sample_events.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sample_events.js",
      "sourceFileName": "sample_events.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sample_events"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function (controller) {\n\n    controller.on('user_channel_join,user_group_join', function (bot, message) {\n\n        bot.reply(message, 'Welcome, <@' + message.user + '>');\n    });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbXBsZV9ldmVudHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRyb2xsZXIiLCJvbiIsImJvdCIsIm1lc3NhZ2UiLCJyZXBseSIsInVzZXIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsVUFBVCxFQUFxQjs7QUFFbENBLGVBQVdDLEVBQVgsQ0FBYyxtQ0FBZCxFQUFtRCxVQUFTQyxHQUFULEVBQWNDLE9BQWQsRUFBdUI7O0FBRXRFRCxZQUFJRSxLQUFKLENBQVVELE9BQVYsRUFBbUIsZ0JBQWdCQSxRQUFRRSxJQUF4QixHQUErQixHQUFsRDtBQUVILEtBSkQ7QUFNSCxDQVJEIiwiZmlsZSI6InNhbXBsZV9ldmVudHMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9za2lsbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGNvbnRyb2xsZXIpIHtcblxuICAgIGNvbnRyb2xsZXIub24oJ3VzZXJfY2hhbm5lbF9qb2luLHVzZXJfZ3JvdXBfam9pbicsIGZ1bmN0aW9uKGJvdCwgbWVzc2FnZSkge1xuXG4gICAgICAgIGJvdC5yZXBseShtZXNzYWdlLCAnV2VsY29tZSwgPEAnICsgbWVzc2FnZS51c2VyICsgJz4nKTtcblxuICAgIH0pO1xuXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sample_events.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "on",
        "bot",
        "message",
        "reply",
        "user"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElCA,eAAWC,EAAX,CAAc,mCAAd,EAAmD,UAASC,GAAT,EAAcC,OAAd,EAAuB;;AAEtED,YAAIE,KAAJ,CAAUD,OAAV,EAAmB,gBAAgBA,QAAQE,IAAxB,GAA+B,GAAlD;AAEH,KAJD;AAMH,CARD",
      "file": "sample_events.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "module.exports = function(controller) {\n\n    controller.on('user_channel_join,user_group_join', function(bot, message) {\n\n        bot.reply(message, 'Welcome, <@' + message.user + '>');\n\n    });\n\n}\n"
      ]
    },
    "mtime": 1529165327919
  },
  "{\"filename\":\"/app/skills/sample_middleware.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/sample_middleware.js",
      "filenameRelative": "/app/skills/sample_middleware.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sample_middleware.js",
      "sourceFileName": "sample_middleware.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sample_middleware"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nmodule.exports = function (controller) {\n\n    // controller.middleware.receive.use(function(bot, message, next) {\n    //\n    //     // do something...\n    //     console.log('RCVD:', message);\n    //     next();\n    //\n    // });\n    //\n    //\n    // controller.middleware.send.use(function(bot, message, next) {\n    //\n    //     // do something...\n    //     console.log('SEND:', message);\n    //     next();\n    //\n    // });\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbXBsZV9taWRkbGV3YXJlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFVBQVQsRUFBcUI7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVILENBbkJEIiwiZmlsZSI6InNhbXBsZV9taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2tpbGxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb250cm9sbGVyKSB7XG5cbiAgICAvLyBjb250cm9sbGVyLm1pZGRsZXdhcmUucmVjZWl2ZS51c2UoZnVuY3Rpb24oYm90LCBtZXNzYWdlLCBuZXh0KSB7XG4gICAgLy9cbiAgICAvLyAgICAgLy8gZG8gc29tZXRoaW5nLi4uXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKCdSQ1ZEOicsIG1lc3NhZ2UpO1xuICAgIC8vICAgICBuZXh0KCk7XG4gICAgLy9cbiAgICAvLyB9KTtcbiAgICAvL1xuICAgIC8vXG4gICAgLy8gY29udHJvbGxlci5taWRkbGV3YXJlLnNlbmQudXNlKGZ1bmN0aW9uKGJvdCwgbWVzc2FnZSwgbmV4dCkge1xuICAgIC8vXG4gICAgLy8gICAgIC8vIGRvIHNvbWV0aGluZy4uLlxuICAgIC8vICAgICBjb25zb2xlLmxvZygnU0VORDonLCBtZXNzYWdlKTtcbiAgICAvLyAgICAgbmV4dCgpO1xuICAgIC8vXG4gICAgLy8gfSk7XG5cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sample_middleware.js"
      ],
      "names": [
        "module",
        "exports",
        "controller"
      ],
      "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH,CAnBD",
      "file": "sample_middleware.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "module.exports = function(controller) {\n\n    // controller.middleware.receive.use(function(bot, message, next) {\n    //\n    //     // do something...\n    //     console.log('RCVD:', message);\n    //     next();\n    //\n    // });\n    //\n    //\n    // controller.middleware.send.use(function(bot, message, next) {\n    //\n    //     // do something...\n    //     console.log('SEND:', message);\n    //     next();\n    //\n    // });\n\n}\n"
      ]
    },
    "mtime": 1529165333171
  },
  "{\"filename\":\"/app/skills/sample_taskbot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/skills/sample_taskbot.js",
      "filenameRelative": "/app/skills/sample_taskbot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sample_taskbot.js",
      "sourceFileName": "sample_taskbot.js",
      "sourceRoot": "/app/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sample_taskbot"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n\n    This is a sample bot that provides a simple todo list function\n    and demonstrates the Botkit storage system.\n\n    Botkit comes with a generic storage system that can be used to\n    store arbitrary information about a user or channel. Storage\n    can be backed by a built in JSON file system, or one of many\n    popular database systems.\n\n    See:\n\n        botkit-storage-mongo\n        botkit-storage-firebase\n        botkit-storage-redis\n        botkit-storage-dynamodb\n        botkit-storage-mysql\n\n*/\n\nmodule.exports = function (controller) {\n\n    // listen for someone saying 'tasks' to the bot\n    // reply with a list of current tasks loaded from the storage system\n    // based on this user's id\n    controller.hears(['tasks', 'todo'], 'direct_message', function (bot, message) {\n\n        // load user from storage...\n        controller.storage.users.get(message.user, function (err, user) {\n\n            // user object can contain arbitary keys. we will store tasks in .tasks\n            if (!user || !user.tasks || user.tasks.length == 0) {\n                bot.reply(message, 'There are no tasks on your list. Say `add _task_` to add something.');\n            } else {\n\n                var text = 'Here are your current tasks: \\n' + generateTaskList(user) + 'Reply with `done _number_` to mark a task completed.';\n\n                bot.reply(message, text);\n            }\n        });\n    });\n\n    // listen for a user saying \"add <something>\", and then add it to the user's list\n    // store the new list in the storage system\n    controller.hears(['add (.*)'], 'direct_message,direct_mention,mention', function (bot, message) {\n\n        var newtask = message.match[1];\n        controller.storage.users.get(message.user, function (err, user) {\n\n            if (!user) {\n                user = {};\n                user.id = message.user;\n                user.tasks = [];\n            }\n\n            user.tasks.push(newtask);\n\n            controller.storage.users.save(user, function (err, saved) {\n\n                if (err) {\n                    bot.reply(message, 'I experienced an error adding your task: ' + err);\n                } else {\n                    bot.api.reactions.add({\n                        name: 'thumbsup',\n                        channel: message.channel,\n                        timestamp: message.ts\n                    });\n                }\n            });\n        });\n    });\n\n    // listen for a user saying \"done <number>\" and mark that item as done.\n    controller.hears(['done (.*)'], 'direct_message', function (bot, message) {\n\n        var number = message.match[1];\n\n        if (isNaN(number)) {\n            bot.reply(message, 'Please specify a number.');\n        } else {\n\n            // adjust for 0-based array index\n            number = parseInt(number) - 1;\n\n            controller.storage.users.get(message.user, function (err, user) {\n\n                if (!user) {\n                    user = {};\n                    user.id = message.user;\n                    user.tasks = [];\n                }\n\n                if (number < 0 || number >= user.tasks.length) {\n                    bot.reply(message, 'Sorry, your input is out of range. Right now there are ' + user.tasks.length + ' items on your list.');\n                } else {\n\n                    var item = user.tasks.splice(number, 1);\n\n                    // reply with a strikethrough message...\n                    bot.reply(message, '~' + item + '~');\n\n                    if (user.tasks.length > 0) {\n                        bot.reply(message, 'Here are our remaining tasks:\\n' + generateTaskList(user));\n                    } else {\n                        bot.reply(message, 'Your list is now empty!');\n                    }\n                }\n            });\n        }\n    });\n\n    // simple function to generate the text of the task list so that\n    // it can be used in various places\n    function generateTaskList(user) {\n\n        var text = '';\n\n        for (var t = 0; t < user.tasks.length; t++) {\n            text = text + '> `' + (t + 1) + '`) ' + user.tasks[t] + '\\n';\n        }\n\n        return text;\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sample_taskbot.js"
      ],
      "names": [
        "module",
        "exports",
        "controller",
        "hears",
        "bot",
        "message",
        "storage",
        "users",
        "get",
        "user",
        "err",
        "tasks",
        "length",
        "reply",
        "text",
        "generateTaskList",
        "newtask",
        "match",
        "id",
        "push",
        "save",
        "saved",
        "api",
        "reactions",
        "add",
        "name",
        "channel",
        "timestamp",
        "ts",
        "number",
        "isNaN",
        "parseInt",
        "item",
        "splice",
        "t"
      ],
      "mappings": "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",
      "file": "sample_taskbot.js",
      "sourceRoot": "/app/skills",
      "sourcesContent": [
        "/*\n\n    This is a sample bot that provides a simple todo list function\n    and demonstrates the Botkit storage system.\n\n    Botkit comes with a generic storage system that can be used to\n    store arbitrary information about a user or channel. Storage\n    can be backed by a built in JSON file system, or one of many\n    popular database systems.\n\n    See:\n\n        botkit-storage-mongo\n        botkit-storage-firebase\n        botkit-storage-redis\n        botkit-storage-dynamodb\n        botkit-storage-mysql\n\n*/\n\nmodule.exports = function(controller) {\n\n    // listen for someone saying 'tasks' to the bot\n    // reply with a list of current tasks loaded from the storage system\n    // based on this user's id\n    controller.hears(['tasks','todo'], 'direct_message', function(bot, message) {\n\n        // load user from storage...\n        controller.storage.users.get(message.user, function(err, user) {\n\n            // user object can contain arbitary keys. we will store tasks in .tasks\n            if (!user || !user.tasks || user.tasks.length == 0) {\n                bot.reply(message, 'There are no tasks on your list. Say `add _task_` to add something.');\n            } else {\n\n                var text = 'Here are your current tasks: \\n' +\n                    generateTaskList(user) +\n                    'Reply with `done _number_` to mark a task completed.';\n\n                bot.reply(message, text);\n\n            }\n\n        });\n\n    });\n\n    // listen for a user saying \"add <something>\", and then add it to the user's list\n    // store the new list in the storage system\n    controller.hears(['add (.*)'],'direct_message,direct_mention,mention', function(bot, message) {\n\n        var newtask = message.match[1];\n        controller.storage.users.get(message.user, function(err, user) {\n\n            if (!user) {\n                user = {};\n                user.id = message.user;\n                user.tasks = [];\n            }\n\n            user.tasks.push(newtask);\n\n            controller.storage.users.save(user, function(err,saved) {\n\n                if (err) {\n                    bot.reply(message, 'I experienced an error adding your task: ' + err);\n                } else {\n                    bot.api.reactions.add({\n                        name: 'thumbsup',\n                        channel: message.channel,\n                        timestamp: message.ts\n                    });\n                }\n\n            });\n        });\n\n    });\n\n    // listen for a user saying \"done <number>\" and mark that item as done.\n    controller.hears(['done (.*)'],'direct_message', function(bot, message) {\n\n        var number = message.match[1];\n\n        if (isNaN(number)) {\n            bot.reply(message, 'Please specify a number.');\n        } else {\n\n            // adjust for 0-based array index\n            number = parseInt(number) - 1;\n\n            controller.storage.users.get(message.user, function(err, user) {\n\n                if (!user) {\n                    user = {};\n                    user.id = message.user;\n                    user.tasks = [];\n                }\n\n                if (number < 0 || number >= user.tasks.length) {\n                    bot.reply(message, 'Sorry, your input is out of range. Right now there are ' + user.tasks.length + ' items on your list.');\n                } else {\n\n                    var item = user.tasks.splice(number,1);\n\n                    // reply with a strikethrough message...\n                    bot.reply(message, '~' + item + '~');\n\n                    if (user.tasks.length > 0) {\n                        bot.reply(message, 'Here are our remaining tasks:\\n' + generateTaskList(user));\n                    } else {\n                        bot.reply(message, 'Your list is now empty!');\n                    }\n                }\n            });\n        }\n\n    });\n\n    // simple function to generate the text of the task list so that\n    // it can be used in various places\n    function generateTaskList(user) {\n\n        var text = '';\n\n        for (var t = 0; t < user.tasks.length; t++) {\n            text = text + '> `' +  (t + 1) + '`) ' +  user.tasks[t] + '\\n';\n        }\n\n        return text;\n\n    }\n}\n"
      ]
    },
    "mtime": 1529165335151
  }
}